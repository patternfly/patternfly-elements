# This workflow will validate the title of a PR to ensure it meets conventional commit standards
name: Validate conventional commit syntax

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
      - reopened

  pull_request_review:
    types:
      - submitted

permissions:
  pull-requests: read

env:
  TOKEN: "${{ secrets.GITHUB_TOKEN }}"

# Separate jobs can run concurrently
jobs:
  prTitle:
    name: Validate conventional commit format for title
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci --prefer-offline

      - id: commitlint
        uses: kevintyj/prlint@v2

      - id: format
        uses: actions/github-script@v6
        env:
          LINT_STATUS: ${{ steps.commitlint.outputs.lint-status }}
          LINT_DETAILS: ${{ steps.commitlint.outputs.lint-details }}
        with:
          script: return `## ${process.env.LINT_STATUS}\n\n${process.env.LINT_DETAILS}`;

      - id: comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: commitlint
          message: |
            ${{ steps.format.outputs.result }}

      - uses: actions/github-script@v7
        env:
          LINT_STATUS: ${{ steps.commitlint.outputs.lint-status }}
        with:
          script: |
            if (process.env.LINT_STATUS.startsWith('‚ùå'))
              core.setFailed(process.env.LINT_STATUS)

