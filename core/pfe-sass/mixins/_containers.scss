@use "./mixins";

// $boxSize = any box-sizing property, default is border-box
@mixin pfe-box-sizing($boxSize: border-box) {
  *,
  *::before,
  *::after {
    box-sizing: $boxSize;
  }
}

@mixin pfe-clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@mixin pfe-container {
  position: relative;
  display: block;
  width: 100%;
  padding: pfe-var(container-spacer);

  padding: calc(#{pfe-local(Padding--vertical)} / 2) #{pfe-local(Padding--horizontal)};

  @media (min-width: pfe-breakpoint(sm)) {
    padding: pfe-local(Padding);
  }
}

/// Accent bar styles
@mixin accent-bar(
  $direction: horizontal,
  $offset: (
    top: 0px,
    left: 0px
  ),
  $thickness: pfe-var(surface--border-width--heavy),
  $color: transparent
) {
  $vertical: "";
  $horizontal: "";

  position: absolute;
  content: "";
  @each $direction, $size in $offset {
    #{$direction}: $size;
    @if $direction == "top" or $direction == "bottom" {
      @if $vertical != "" {
        $vertical: "#{$vertical} - #{$size}";
      } @else {
        $vertical: "#{$size}";
      }
    } @else {
      @if $horizontal != "" {
        $horizontal: "#{$horizontal} - #{$size}";
      } @else {
        $horizontal: "#{$size}";
      }
    }
  }
  background-color: $color;
  @if $direction != horizontal {
    width: calc(#{$thickness} - #{$horizontal});
    height: calc(100% - #{$vertical});
  } @else {
    width: calc(100% - #{$vertical});
    height: calc(#{$thickness} - #{$horizontal});
  }
}
