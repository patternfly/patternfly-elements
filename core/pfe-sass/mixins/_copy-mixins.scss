@use "../maps/typography" as *;
@use "../functions/custom-properties";

/// Mixin for creating an accessible focus state
/// @group tools
/// @param {Color} $color [$pfe-color--link]
/// @see {variable} $pfe-color--link
/// @example - scss
/// .thing {
///   @include pfe-accessibility-focus($pfe-color--link--on-dark);
/// }
/// @example - css
/// .thing {
///   outline-offset: 1px;
///   outline-style: dotted;
///   outline-width: 1px;
///   text-decoration: none !important;
///   outline-color: #73bcf7;
/// }
@mixin pfe-accessibility-focus($color: $pfe-color--link) {
  outline-offset: 1px;
  outline-style: dotted;
  outline-width: 1px;
  text-decoration: none !important;

  @if type-of($color) ==color {
    outline-color: $color;
  }
}

@mixin pfe-underline($color: default-link-hover-line, $opacity: 1) {
  text-decoration: underline;
  text-decoration-skip: ink;
}

/// Mixin for authors outside of PFE to control spacing between content
/// @group typography
/// @param {*} $sizing [lg, md, sm]
/// @param {*} $type [heading, body]
/// @example - scss
///   @include pfe-content--text--spacing-block(sm);
@mixin pfe-content--text--spacing-block($sizing: md, $type: body) {
    &:not(:last-child):not(:empty) {
        margin-bottom: custom-properties.pfe-var(content-spacer--#{$type}--#{$sizing}); //16px
    }
}

/// Mixin for authors outside of PFE to customize block level elements
/// The variable stack includes a hook just for headings when they appear in the
/// light DOM within components: --pf-c--FontSize
///
/// Components can't control the font size of block level elements like HTML headings
/// when they are in the light DOM.  A component _could_ redefine the variables for
/// standard headings by using the variable hooks such as: `--pf-c--content--h4--FontSize`
/// but it can't know if the light DOM might contain an H1, H2, H3, etc. it shouldn't
/// redefine the variables for all possible headings. Instead, there is one dedicated
/// variable for this purpose.
/// @group typography
/// @param {*} $sizing [h1, h2, h3, h4, h5, h6, p, small]
/// @example - scss
///  .project-wrapper h3  {
///      @include pfe-title(xl);
///  }
/// @example - css
///  .project-wrapper  h3 {
///    font-family: "Red Hat Display", "RedHatDisplay", "Overpass", Overpass, Arial, sans-serif;
///    font-family: var(--pfe-theme--font-family--heading, "Red Hat Display", "RedHatDisplay", "Overpass", Overpass, Arial, sans-serif);
///    line-height: 1.3;
///    line-height: var(--pfe-theme--line-height--heading, 1.3);
///    font-weight: 500;
///    font-weight: var(--pfe-theme--font-weight--normal, 500);
///    font-size: 1.25rem;
///    font-size: var(--pf-c--FontSize, var(--pf-c--content--h3--FontSize, var(--pf-global--FontSize--xl, 1.25rem)));
///  }
@mixin pfe-content($element: "p", $base: false){
    // TEXT
    @if $element == "p" or $element == "small" {
        // @extend %pfe-content-base;
        font-family: custom-properties.pfe-var(font-family);
        line-height: custom-properties.pfe-var(line-height);
        font-weight: custom-properties.pfe-var(font-weight--light);
        // END @extend %pfe-content-base;

        // Accomodate for irregular variable naming
        @if $element == "p" {
            font-size: var(--pf-c--FontSize, custom-properties.pfe-var(content--FontSize));
        }
        @else {
            font-size: var(--pf-c--FontSize, custom-properties.pfe-var(content--#{$element}--FontSize));
        }
        @if $base {
            font-family: custom-properties.pfe-var(font-family);
            line-height: custom-properties.pfe-var(line-height);
            font-weight: custom-properties.pfe-var(font-weight--normal);
        }
        // spacing
        @include pfe-content--text--spacing-block(sm);
    }
    @else { // HEADINGS
        font-family: custom-properties.pfe-var(font-family--heading);
        line-height: custom-properties.pfe-var(line-height--heading);
        font-weight: custom-properties.pfe-var(font-weight--normal);

        font-size: var(--pf-c--FontSize, #{custom-properties.pfe-var(content--#{$element}--FontSize)});
        // spacing
        @include pfe-content--text--spacing-block(sm, heading);
    }
}

