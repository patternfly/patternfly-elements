{"version":3,"sources":["pfe-colors.scss","pfe-colors.css","../../pfe-sass/functions/_custom-properties.scss"],"names":[],"mappings":"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","file":"pfe-colors.css","sourcesContent":["/* DEMO FILE ONLY, NOT FOR PRODUCTION USE */\n@import \"../../pfe-sass/pfe-sass\";\n\n:root {\n\n    @each $name,\n    $color in $pfe-colors {\n        --theme--color--#{$name}: #{$color};\n    }\n}\n\n@function contexts($list) {\n    @each $item in $list {\n        @if str-starts-with($item, \"on\") {\n            @return '[on=\"#{nth(str-split($item, \"-\"), 2)}\"] ';\n        }\n    }\n\n    @return \"\";\n}\n\n@function states($list) {\n    @each $s in (hover, focus, visited) {\n        @if index($list, $s) {\n            @return \"--#{$s}\";\n        }\n    }\n\n    @return \"\";\n}\n\n@function contexts($list, $color) {\n    @if index($list, context) {\n        @return $color;\n    }\n\n    @return \"\";\n}\n\n@each $name,\n$color in $pfe-colors {\n    $list: str-split($name, $separator: \"--\");\n    $property: background-color;\n    $state: #{states($list)};\n    $context: #{contexts($list, $color)};\n\n    @if length($list)>1 {\n        @if index($list, \"text\") {\n            $property: color;\n        }\n    }\n\n    // UI styles, not link\n    @if str-starts-with(#{first($list)}, \"ui\") and not (str-starts-with(#{first($list)}, \"link\")) {\n        #{unquote($context)}.#{first($list)}#{unquote($state)} {\n            #{$property}: var(--theme--#{$name}, #{$color});\n        }\n    }\n\n    // Surface styles\n    @if index($list, \"surface\") {\n        #{unquote($context)}.#{nth($list, 2)}#{unquote($state)} {\n            @if $context != \"\" and $context != light {\n                color: pfe-var(text--on-#{$context});\n            } @else if $context == light {\n                color: pfe-var(text);\n            }\n            @else {\n                #{$property}: var(--theme--#{$name}, #{$color}) !important;\n            }\n        }\n    }\n}\n\n// Demo page styles\nbody {\n    padding: 32px;\n    background: #e7e7e7;\n    color: #1a1a1a;\n}\n\narticle {\n    padding: 32px 0;\n}\n\n.white-box {\n    padding: 32px;\n    background-color: #fff;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, .2);\n    margin: 32px 0 !important;\n    \n    > *:first-child {\n        margin-top: 0;\n    }\n\n    >h4 {\n        margin-top: 32px;\n    }\n}\n\npre {\n    padding: 8px;\n}\n\n.layouts .pfe-l-grid {\n    .pfe-l-grid__item,\n    >div:not([class]) {\n        background: #e0d7ee;\n    }\n    >* {\n        padding: 8px;\n    }\n}\n\n:not(pre)>code[class*=language-],\npre[class*=language-] {\n    background: #f2f2f2;\n}","/* DEMO FILE ONLY, NOT FOR PRODUCTION USE */\n:root {\n  --theme--color--text: #151515;\n  --theme--color--text--muted: #6a6e73;\n  --theme--color--link: #06c;\n  --theme--color--link--visited: #6753ac;\n  --theme--color--link--hover: #004080;\n  --theme--color--link--focus: #004080;\n  --theme--color--text--on-dark: #fff;\n  --theme--color--text--muted--on-dark: #d2d2d2;\n  --theme--color--link--on-dark: #73bcf7;\n  --theme--color--link--visited--on-dark: #bee1f4;\n  --theme--color--link--hover--on-dark: #bee1f4;\n  --theme--color--link--focus--on-dark: #bee1f4;\n  --theme--color--text--on-saturated: #fff;\n  --theme--color--text--muted--on-saturated: #d2d2d2;\n  --theme--color--link--on-saturated: #fff;\n  --theme--color--link--visited--on-saturated: #d2d2d2;\n  --theme--color--link--hover--on-saturated: #fafafa;\n  --theme--color--link--focus--on-saturated: #fafafa;\n  --theme--color--ui-base: #6a6e73;\n  --theme--color--ui-base--hover: #151515;\n  --theme--color--ui-base--focus: #151515;\n  --theme--color--ui-base--text: #fff;\n  --theme--color--ui-base--text--hover: #fff;\n  --theme--color--ui-base--text--focus: #fff;\n  --theme--color--ui-base--on-dark: #fff;\n  --theme--color--ui-base--hover--on-dark: #f0f0f0;\n  --theme--color--ui-base--focus--on-dark: #f0f0f0;\n  --theme--color--ui-base--text--on-dark: #3c3f42;\n  --theme--color--ui-base--text--hover--on-dark: #3c3f42;\n  --theme--color--ui-base--text--focus--on-dark: #3c3f42;\n  --theme--color--ui-base--on-saturated: #fff;\n  --theme--color--ui-base--hover--on-saturated: #f0f0f0;\n  --theme--color--ui-base--focus--on-saturated: #f0f0f0;\n  --theme--color--ui-base--text--on-saturated: #3c3f42;\n  --theme--color--ui-base--text--hover--on-saturated: #3c3f42;\n  --theme--color--ui-base--text--focus--on-saturated: #3c3f42;\n  --theme--color--ui-accent: #06c;\n  --theme--color--ui-accent--hover: #004080;\n  --theme--color--ui-accent--focus: #004080;\n  --theme--color--ui-accent--text: #fff;\n  --theme--color--ui-accent--text--hover: #fff;\n  --theme--color--ui-accent--text--focus: #fff;\n  --theme--color--ui-accent--on-dark: #73bcf7;\n  --theme--color--ui-accent--hover--on-dark: #2b9af3;\n  --theme--color--ui-accent--focus--on-dark: #2b9af3;\n  --theme--color--ui-accent--text--on-dark: #3c3f42;\n  --theme--color--ui-accent--text--hover--on-dark: #3c3f42;\n  --theme--color--ui-accent--text--focus--on-dark: #3c3f42;\n  --theme--color--ui-accent--on-saturated: #fff;\n  --theme--color--ui-accent--hover--on-saturated: #d2d2d2;\n  --theme--color--ui-accent--focus--on-saturated: #d2d2d2;\n  --theme--color--ui-accent--text--on-saturated: #3c3f42;\n  --theme--color--ui-accent--text--hover--on-saturated: #3c3f42;\n  --theme--color--ui-accent--text--focus--on-saturated: #3c3f42;\n  --theme--color--ui-disabled: #d2d2d2;\n  --theme--color--ui-disabled--hover: #d2d2d2;\n  --theme--color--ui-disabled--focus: transparent;\n  --theme--color--ui-disabled--text: #6a6e73;\n  --theme--color--ui-disabled--text--hover: #8a8d90;\n  --theme--color--ui-disabled--text--focus: #8a8d90;\n  --theme--color--ui--border--lightest: #f0f0f0;\n  --theme--color--ui--border--lighter: #d2d2d2;\n  --theme--color--ui--border: #8a8d90;\n  --theme--color--ui--border--darker: #3c3f42;\n  --theme--color--ui--border--darkest: #151515;\n  --theme--color--surface--lightest: #fff;\n  --theme--color--surface--lightest--context: light;\n  --theme--color--surface--lighter: #f0f0f0;\n  --theme--color--surface--lighter--context: light;\n  --theme--color--surface--base: #f0f0f0;\n  --theme--color--surface--base--context: light;\n  --theme--color--surface--darker: #3c3f42;\n  --theme--color--surface--darker--context: dark;\n  --theme--color--surface--darkest: #151515;\n  --theme--color--surface--darkest--context: dark;\n  --theme--color--surface--complement: #002952;\n  --theme--color--surface--complement--context: saturated;\n  --theme--color--surface--accent: #004080;\n  --theme--color--surface--accent--context: saturated;\n  --theme--color--surface--border--lightest: #f5f5f5;\n  --theme--color--surface--border: #d2d2d2;\n  --theme--color--surface--border--darker: #6a6e73;\n  --theme--color--surface--border--darkest: #3c3f42;\n  --theme--color--feedback--critical--lightest: #faeae8;\n  --theme--color--feedback--critical--lighter: #c9190b;\n  --theme--color--feedback--critical: #a30000;\n  --theme--color--feedback--critical--darker: #7d1007;\n  --theme--color--feedback--critical--darkest: #470000;\n  --theme--color--feedback--important--lightest: #faeae8;\n  --theme--color--feedback--important: #c9190b;\n  --theme--color--feedback--important--darkest: #a30000;\n  --theme--color--feedback--moderate--lightest: #f9e0a2;\n  --theme--color--feedback--moderate: #f0ab00;\n  --theme--color--feedback--moderate--darkest: #c58c00;\n  --theme--color--feedback--success--lightest: #bde5b8;\n  --theme--color--feedback--success: #3e8635;\n  --theme--color--feedback--success--darkest: #1e4f18;\n  --theme--color--feedback--info--lightest: #73bcf7;\n  --theme--color--feedback--info: #06c;\n  --theme--color--feedback--info--darkest: #004080;\n  --theme--color--feedback--default--lightest: #f0f0f0;\n  --theme--color--feedback--default: #4f5255;\n  --theme--color--feedback--default--darkest: #3c3f42;\n  --theme--color--overlay: rgba(21, 21, 21, 0.5);\n}\n\n.ui-base {\n  background-color: var(--theme--ui-base, #6a6e73);\n}\n\n.ui-base--hover {\n  background-color: var(--theme--ui-base--hover, #151515);\n}\n\n.ui-base--focus {\n  background-color: var(--theme--ui-base--focus, #151515);\n}\n\n.ui-base {\n  color: var(--theme--ui-base--text, #fff);\n}\n\n.ui-base--hover {\n  color: var(--theme--ui-base--text--hover, #fff);\n}\n\n.ui-base--focus {\n  color: var(--theme--ui-base--text--focus, #fff);\n}\n\n.ui-base {\n  background-color: var(--theme--ui-base--on-dark, #fff);\n}\n\n.ui-base--hover {\n  background-color: var(--theme--ui-base--hover--on-dark, #f0f0f0);\n}\n\n.ui-base--focus {\n  background-color: var(--theme--ui-base--focus--on-dark, #f0f0f0);\n}\n\n.ui-base {\n  color: var(--theme--ui-base--text--on-dark, #3c3f42);\n}\n\n.ui-base--hover {\n  color: var(--theme--ui-base--text--hover--on-dark, #3c3f42);\n}\n\n.ui-base--focus {\n  color: var(--theme--ui-base--text--focus--on-dark, #3c3f42);\n}\n\n.ui-base {\n  background-color: var(--theme--ui-base--on-saturated, #fff);\n}\n\n.ui-base--hover {\n  background-color: var(--theme--ui-base--hover--on-saturated, #f0f0f0);\n}\n\n.ui-base--focus {\n  background-color: var(--theme--ui-base--focus--on-saturated, #f0f0f0);\n}\n\n.ui-base {\n  color: var(--theme--ui-base--text--on-saturated, #3c3f42);\n}\n\n.ui-base--hover {\n  color: var(--theme--ui-base--text--hover--on-saturated, #3c3f42);\n}\n\n.ui-base--focus {\n  color: var(--theme--ui-base--text--focus--on-saturated, #3c3f42);\n}\n\n.ui-accent {\n  background-color: var(--theme--ui-accent, #06c);\n}\n\n.ui-accent--hover {\n  background-color: var(--theme--ui-accent--hover, #004080);\n}\n\n.ui-accent--focus {\n  background-color: var(--theme--ui-accent--focus, #004080);\n}\n\n.ui-accent {\n  color: var(--theme--ui-accent--text, #fff);\n}\n\n.ui-accent--hover {\n  color: var(--theme--ui-accent--text--hover, #fff);\n}\n\n.ui-accent--focus {\n  color: var(--theme--ui-accent--text--focus, #fff);\n}\n\n.ui-accent {\n  background-color: var(--theme--ui-accent--on-dark, #73bcf7);\n}\n\n.ui-accent--hover {\n  background-color: var(--theme--ui-accent--hover--on-dark, #2b9af3);\n}\n\n.ui-accent--focus {\n  background-color: var(--theme--ui-accent--focus--on-dark, #2b9af3);\n}\n\n.ui-accent {\n  color: var(--theme--ui-accent--text--on-dark, #3c3f42);\n}\n\n.ui-accent--hover {\n  color: var(--theme--ui-accent--text--hover--on-dark, #3c3f42);\n}\n\n.ui-accent--focus {\n  color: var(--theme--ui-accent--text--focus--on-dark, #3c3f42);\n}\n\n.ui-accent {\n  background-color: var(--theme--ui-accent--on-saturated, #fff);\n}\n\n.ui-accent--hover {\n  background-color: var(--theme--ui-accent--hover--on-saturated, #d2d2d2);\n}\n\n.ui-accent--focus {\n  background-color: var(--theme--ui-accent--focus--on-saturated, #d2d2d2);\n}\n\n.ui-accent {\n  color: var(--theme--ui-accent--text--on-saturated, #3c3f42);\n}\n\n.ui-accent--hover {\n  color: var(--theme--ui-accent--text--hover--on-saturated, #3c3f42);\n}\n\n.ui-accent--focus {\n  color: var(--theme--ui-accent--text--focus--on-saturated, #3c3f42);\n}\n\n.ui-disabled {\n  background-color: var(--theme--ui-disabled, #d2d2d2);\n}\n\n.ui-disabled--hover {\n  background-color: var(--theme--ui-disabled--hover, #d2d2d2);\n}\n\n.ui-disabled--focus {\n  background-color: var(--theme--ui-disabled--focus, transparent);\n}\n\n.ui-disabled {\n  color: var(--theme--ui-disabled--text, #6a6e73);\n}\n\n.ui-disabled--hover {\n  color: var(--theme--ui-disabled--text--hover, #8a8d90);\n}\n\n.ui-disabled--focus {\n  color: var(--theme--ui-disabled--text--focus, #8a8d90);\n}\n\n.ui {\n  background-color: var(--theme--ui--border--lightest, #f0f0f0);\n}\n\n.ui {\n  background-color: var(--theme--ui--border--lighter, #d2d2d2);\n}\n\n.ui {\n  background-color: var(--theme--ui--border, #8a8d90);\n}\n\n.ui {\n  background-color: var(--theme--ui--border--darker, #3c3f42);\n}\n\n.ui {\n  background-color: var(--theme--ui--border--darkest, #151515);\n}\n\n.lightest {\n  background-color: var(--theme--surface--lightest, #fff) !important;\n}\n\nlight.lightest {\n  color: var(--pfe-theme--color--text, #151515);\n}\n\n.lighter {\n  background-color: var(--theme--surface--lighter, #f0f0f0) !important;\n}\n\nlight.lighter {\n  color: var(--pfe-theme--color--text, #151515);\n}\n\n.base {\n  background-color: var(--theme--surface--base, #f0f0f0) !important;\n}\n\nlight.base {\n  color: var(--pfe-theme--color--text, #151515);\n}\n\n.darker {\n  background-color: var(--theme--surface--darker, #3c3f42) !important;\n}\n\ndark.darker {\n  color: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.darkest {\n  background-color: var(--theme--surface--darkest, #151515) !important;\n}\n\ndark.darkest {\n  color: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n.complement {\n  background-color: var(--theme--surface--complement, #002952) !important;\n}\n\nsaturated.complement {\n  color: var(--pfe-theme--color--text--on-saturated, #fff);\n}\n\n.accent {\n  background-color: var(--theme--surface--accent, #004080) !important;\n}\n\nsaturated.accent {\n  color: var(--pfe-theme--color--text--on-saturated, #fff);\n}\n\n.border {\n  background-color: var(--theme--surface--border--lightest, #f5f5f5) !important;\n}\n\n.border {\n  background-color: var(--theme--surface--border, #d2d2d2) !important;\n}\n\n.border {\n  background-color: var(--theme--surface--border--darker, #6a6e73) !important;\n}\n\n.border {\n  background-color: var(--theme--surface--border--darkest, #3c3f42) !important;\n}\n\nbody {\n  padding: 32px;\n  background: #e7e7e7;\n  color: #1a1a1a;\n}\n\narticle {\n  padding: 32px 0;\n}\n\n.white-box {\n  padding: 32px;\n  background-color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  margin: 32px 0 !important;\n}\n\n.white-box > *:first-child {\n  margin-top: 0;\n}\n\n.white-box > h4 {\n  margin-top: 32px;\n}\n\npre {\n  padding: 8px;\n}\n\n.layouts .pfe-l-grid .pfe-l-grid__item,\n.layouts .pfe-l-grid > div:not([class]) {\n  background: #e0d7ee;\n}\n\n.layouts .pfe-l-grid > * {\n  padding: 8px;\n}\n\n:not(pre) > code[class*=language-],\npre[class*=language-] {\n  background: #f2f2f2;\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}"],"sourceRoot":"../src"}