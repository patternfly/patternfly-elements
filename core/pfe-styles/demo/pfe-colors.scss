/* DEMO FILE ONLY, NOT FOR PRODUCTION USE */
@use "@patternfly/pfe-sass" as *;
@use "sass:string";
@use "sass:list";

:root,
:host {
    @each $name,
    $color in $pfe-colors {
        --theme--color--#{$name}: #{$color};
    }
}

@function contextAttr($list) {
    @each $item in $list {
        @if str-starts-with($item, "on") {
            @return '[on="#{list.nth(str-split($item, "-"), 2)}"] ';
        }
    }

    @return "";
}

@function states($list) {
    @each $s in (hover, focus, visited) {
        @if list.index($list, $s) {
            @return "--#{$s}";
        }
    }

    @return "";
}

@function contexts($list, $color) {
    @if list.index($list, context) {
        @return $color;
    }

    @return "";
}

@each $name, $color in $pfe-colors {
    $list: str-split($name, $separator: "--");
    $property: background-color;
    $state: #{states($list)};
    $context: #{contexts($list, $color)};
    $context-attr: contextAttr($list);

    @if list.length($list)>1 {
        @if list.index($list, "text") {
            $property: color;
        }
    }

    // UI styles, not link
    @if str-starts-with(#{first($list)}, "ui") and not (str-starts-with(#{first($list)}, "link")) {
        #{string.unquote($context-attr)}.#{first($list)}#{string.unquote($state)} {
            #{$property}: var(--theme--#{$name}, #{$color});
        }
    }

    // Surface styles
    @if index($list, "surface") {
        #{string.unquote($context-attr)}.#{list.nth($list, 2)}#{string.unquote($state)} {
            @if $context != "" and $context != light {
                color: pfe-var(text--on-#{$context});
            } @else if $context == light {
                color: pfe-var(text);
            }
            @else {
                #{$property}: var(--theme--#{$name}, #{$color}) !important;
            }
        }
    }
}

// Demo page styles
:host,
body {
    padding: 32px;
    background: #e7e7e7;
    color: #1a1a1a;
}

article {
    padding: 32px 0;
}

.white-box {
    padding: 32px;
    background-color: #fff;
    box-shadow: 0 1px 3px rgba(0, 0, 0, .2);
    margin: 32px 0 !important;

    > *:first-child {
        margin-top: 0;
    }

    >h4 {
        margin-top: 32px;
    }
}

pre {
    padding: 8px;
}

.pfe-l-grid {
    .pfe-l-grid__item,
    >div:not([class]) {
        background: #e0d7ee;
    }
    >* {
        padding: 8px;
    }
}

:not(pre)>code[class*=language-],
pre[class*=language-] {
    background: #f2f2f2;
}
