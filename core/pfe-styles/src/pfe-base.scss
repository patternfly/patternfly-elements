//@TODO, pull from https://github.com/patternfly/patternfly-next/blob/master/src/patternfly/_globals.scss#L90

@use "@patternfly/pfe-sass" as *;

@import "@patternfly/pfe-sass/extends/typography_extends";

@include configure($name: 'pfelement');

// NORMALIZE
*,
*::before,
*::after {
  box-sizing: border-box;
}

:root,
body,
p,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  padding: 0;
  margin-top: 0;

  &:last-child {
      margin-bottom: 0;
  }
}

button,
input,
select,
textarea {
  margin: 0;
  font-family: inherit;
}

img,
embed,
iframe,
object,
audio,
video {
  max-width: 100%;
  height: auto;
}

iframe {
  border: 0;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
}

td,
th {
  padding: 0;
  text-align: left;
}

// PatternFly Styles

:root {
  @include pfe-set-broadcast-context(light);
  font-size: pfe-var(FontSize--root);
}

// Note: this is a quick & heavy-handed solution for shrinking everything on mobile
// @media (max-width: 768px) {
//   :root {
//     --pf-global--FontSize--root: 0.86em;
//   }
// }

body {
  @extend %pfe-content-base;
  /* This variable is intentionally left empty for light DOM within components */
  font-size: var(--pf-c--FontSize, #{pfe-var(content--FontSize)});
  color: pfe-var(text);
  text-align: left;
  margin: 0;
}

// HTML TYPOGRAPHY
.pfe-c-content {
  // HEADINGS
  @each $element in (h1, h2, h3, h4, h5, h6, p) {
    #{$element}  {
        @include pfe-content ($element);
    }
  }

  // TEXT & LISTS
  // paragraphs, list items, etc inherit from the body
  dl,
  ol,
  ul {
    @extend %pfe-content--list;
  }
  dd,
  dt,
  li{
      @extend %pfe-content--list-item;
  }
  li >  ol,
  li >  ul {
      @extend %pfe-content--nested-list;
  }

  // @TODO: Tables, blockquotes

}

// LINKS
a {
  color: pfe-broadcasted(link);
  text-decoration: pfe-broadcasted(link-decoration);

  @each $state in (hover, focus, visited) {
    &:#{$state} {
      color: pfe-broadcasted(link--#{$state});
      text-decoration: pfe-broadcasted(link-decoration--#{$state});
    }
  }
}

button,
a {
  cursor: pointer;
}
