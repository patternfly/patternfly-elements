// Import the base styles first
@import "../../pfe-collapse/src/pfe-collapse-panel.scss";

// Then layer the shared assets over it
@import "shared-assets";

/// ===========================================================================
/// ACCORDION PANEL
/// Styles sourced from: @patternfly/patternfly/components/Accordion/accordion.scss
/// then updated for pfe theming variables
/// ===========================================================================

:host {
  @include pfe-box-sizing;

  width: 100%;
  z-index: 0;

  margin: 0;
  padding: 0;
  
  outline: none;

  background-color: pfe-local(BackgroundColor, transparent);
  color: pfe-local(Color);
  box-shadow: pfe-local(BoxShadow);

  // Border settings
  border-style: pfe-var(surface--border-style);
  // border-width: pfe-local(BorderWidth, $fallback: 0);

  border-color: pfe-local(BorderColor);
  border-width: pfe-local(BorderWidth);
  
  // No visible top border on the panel is necessary
  border-top-width: 0;

  margin-bottom: calc(-1 * #{pfe-local(BorderWidth)});

  // Force IE11 to use white to prevent content from being un-readable
  @include browser-query(ie11) {
    background-color: pfe-fetch(surface--lightest) !important;
    color: pfe-fetch(text) !important;
  }

  ::slotted(*) {
    // Ensure the box shadow does not propagate to nested accordions
    --pfe-accordion--BoxShadow: none;
  }

  // Accent bar
  &::after {
    @include accent-bar(
      $direction: vertical,
      $offset: (
        bottom: calc(-1 * #{pfe-local(BorderWidth)}),
        left: calc(-1 * #{pfe-local(BorderWidth)})
      ),
      $thickness: pfe-local(accent--width),
      $color: pfe-local(accent) // defaults to transparent
    );
    z-index: calc(#{pfe-local(ZIndex)} + 1);
  }
}

// Same styles as the panel, see shared-assets
@include pfe-accordion--expanded();

.pf-c-accordion__expanded-content {
  @extend %container;
  @include pfe-clearfix;
  padding: pfe-local(Padding);

  :host([disclosure="true"]) & {
    padding: pfe-local(Padding, $region: panel-container, $fallback: 0 calc(#{pfe-var(container-padding)} * 3) calc(#{pfe-var(container-padding)}) calc(#{pfe-var(container-padding)} * 1.5));
  }

  // Allow opt-out of panel max-width via attribute or CSS variable
  :host(:not([full-width])) & {
    max-width: pfe-local(MaxWidth--content);
  }
}

/// ===========================================================================
/// EXPANDED STYLES
/// ===========================================================================
:host(.animating) {
  border-left-color: pfe-local(accent);
}

:host([expanded]:not(.animating)) {
  overflow: visible;
  margin-bottom: 0;
}
