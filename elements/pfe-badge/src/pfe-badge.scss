@import "../../pfe-sass/pfe-sass";
$LOCAL: badge;

$LOCAL-VARIABLES: (
  BackgroundColor: pfe-var(feedback--default--lightest),
  BorderRadius: calc(#{pfe-var(ui--border-radius)} * 30),

  Color: pfe-var(text),

  FontSize: calc(#{pfe-var(font-size)} * 0.75),
  FontWeight: pfe-var(font-weight--semi-bold),

  MinWidth: calc(#{pfe-var(ui--border-width)} * 2),

  PaddingLeft: calc(#{pfe-var(container-padding)} / 2),
  PaddingRight: calc(#{pfe-var(container-padding)} / 2)
);

:host {
  display: inline-block;
  line-height: calc(#{pfe-var(line-height)} * 0.75);
  text-align: center;
  text-rendering: optimizelegibility;
}

span {
  background-color: pfe-local(BackgroundColor);
  border-radius:    pfe-local(BorderRadius);
  color:            pfe-local(Color);
  font-size:        pfe-local(FontSize);
  font-weight:      pfe-local(FontWeight);
  min-width:        pfe-local(MinWidth);
  padding-left:     pfe-local(PaddingLeft);
  padding-right:    pfe-local(PaddingRight);
  vertical-align:   middle;
}

@each $state in (moderate, important, critical, success, info) {
  :host([state="#{$state}"]) {
    $state: (
      BackgroundColor: pfe-var(feedback--#{$state}),
      Color: pfe-var(text--on-dark)
    );

    @if ($state == 'moderate') {
      $state: map-merge($state, (Color: pfe-var(text)));
    }

    span {
      @include pfe-print-local($state);
    }
  }
}

:host([hidden]) {
  display: none;
}
