@use "sass:map";
@use "@patternfly/pfe-sass" as *;

@include configure(
  $name: 'health-index',
);

@include pfe-contexts; // imports on="light" etc support

$colors: (
  a: #3f9c35,
  b: #92d400,
  c: #efaa00,
  d: #ec7a08,
  e: #cc0000,
  f: #523333
);

// TODO: Migrate to theme values?
// $colors: (
//   a: pfe-var(feedback--success--darkest),
//   b: pfe-var(feedback--success),
//   c: pfe-var(feedback--moderate),
//   d: pfe-var(feedback--moderate--darkest),
//   e: pfe-var(feedback--critical),
//   f: pfe-var(feedback--critical--darkest)
// );

/// ===========================================================================
/// WHATEVER
/// ===========================================================================

:host {
  display: inline-flex;
  align-items: center;
}

:host([hidden]) {
  display: none;
}

.box {
  @each $level in (a b c d e f) {
    &.#{$level} {
      --pfe-health-index--accent: #{map.get($colors, $level)};
      --pfe-health-index--accent--text: #{pfe-var(text--on-dark)};
    }
  }

  :host(:not([size="lg"]):not([size="mini"])) & {
    background-color: pfe-var(surface--lightest);
    width: calc(#{pfe-var(ui--element--size)} / 2);
    height: pfe-var(ui--element--size);
    border-right: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);

    &:last-child {
      border-right: 0;
    }

    &.active {
      background-color: pfe-local(accent);
    }
  }

  :host([size="mini"]) & {
    display: flex;
    width: pfe-var(ui--element--size);
    height: pfe-var(ui--element--size);
    justify-content: center;
    align-items: center;
    font-size: 1em;
    border-radius: pfe-var(ui--border-radius);
    // Color applied to the background
    background-color: pfe-local(accent);
    color: pfe-local(accent--text);
  }

  :host([size="lg"]) & {
    background-color: pfe-var(surface--lightest);
    color: pfe-var(ui-disabled--text);
    border-top: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);

    &:first-child {
      margin-left: 0;
      border-left: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);
    }

    &.active:first-child {
      border-left: none;
    }

    &:last-child {
      margin-right: 0;
      border-right: calc(#{pfe-var(ui--border-width)} * 2) pfe-var(ui--border-style) pfe-var(surface--border--lightest);
    }

    &.active:last-child {
      border-right: 0;
    }

    & > .bottom {
      height: .5em;
      margin: 0 .5px;
    }

    .grade {
      // TODO: What is the 6px value's relationship to the other design elements?
      padding: 6px calc(#{pfe-var(ui--element--size)} / 2);
    }

    &.active .grade {
      margin: calc(#{pfe-var(ui--border-width)} * -2) .5px 0 .5px;
      padding-top: .5em;
    }

    & > .bottom,
    &.active .grade {
      background-color: pfe-local(accent);
      color: pfe-local(accent--text);
    }
  }
  &-container {
    :host(:not([size="mini"])) & {
      display: flex;
    }
    :host(:not([size="lg"]):not([size="mini"])) & {
      border: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
      margin-left: calc(#{pfe-var(container-spacer)} * 0.5);
    }
    :host([size="mini"],[size="lg"]) & {
      border: none;
    }
    :host([size="mini"]) & {
      margin: 0;
    }
    :host([size="lg"]) & {
      margin-left: 0;
    }
  }
}
