@import "sass-includes/variables-mixins";

/*
Because we have to respond to CSS breakpoints and JS telling we need to collapse
a nav section when there isn't enough room the navigation layout states per 'layout state'
are easier managed in mixins that DO NOT depend on the cascade.

Any style that is important to that layout state should be explicitly set and can't depend on
styles from previous breakpoints.

See mixin blocks before selectors that contain the selector name and the three layout states:

[SELECTOR]--mobile: Both the secondary links and main menu are collapsed, typically used in:
  - default breakpoint CSS
  - @include collpase('secondary-nav')

[SELECTOR]--collapsed-menu: Just the main menu is collapsed, typically used in:
  - @include breakpoint('secondary-links-expand')
  - @include collpase('nav')

[SELECTOR]--desktop: Neither are collapsed, typically used in:
  - @include breakpoint('nav-expand')
*/

* {
  &,
  &:before,
  &:after {
    box-sizing: border-box;
  }
}

:host {
  display: block;
  position: relative;
  z-index: pfe-zindex(navigation);
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none!important;
}

// @note Have to qualify class with tag because of crappy ShadyCSS & IE
nav.pfe-navigation {
  display: flex;
  align-items: stretch;
}

// Overlay
.pfe-navigation__overlay {
  display: block;
  background: pfe-local(overlay--Background);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  &[hidden] {
    display: none;
  }
}

.pfe-navigation__wrapper {
  @include pfe-navigation__wrapper;
  @include pfe-navigation__wrapper--mobile;
  transition: opacity 0.10s linear;

  @include breakpoint('secondary-links-expand') {
    @include pfe-navigation__wrapper--collapsed-menu;
  }
  @include breakpoint('nav-expand') {
    @include pfe-navigation__wrapper--desktop;
  }
  @include collapse('nav') {
    @include pfe-navigation__wrapper--collapsed-menu;
  }
  @include collapse('secondary-links') {
    @include pfe-navigation__wrapper--mobile;
  }

  a {
    text-decoration: none;
  }

  button {
    font-family: inherit;
  }

  &.pfe-navigation--is-resizing {
    opacity: 0;
  }
}

// Logo area
// --------------------------------------------------------
.pfe-navigation__logo-wrapper {
  @include pfe-navigation__logo-wrapper;
}

.pfe-navigation__logo-link {
  @include pfe-navigation__logo-link;
}

.pfe-navigation__logo-image,
.pfe-navigation__logo-link img,
.pfe-navigation__logo-link svg {
  @include pfe-navigation__logo-image;
}

// Top Level Menu Buttons Base Styles
// --------------------------------------------------------
.pfe-navigation__menu-toggle,
.pfe-navigation__search-toggle,
.pfe-navigation__log-in-link,
.pfe-navigation__account-toggle {
  @include top-level-button;
}

// Layout changes per breakpoint
// See comment at top of file
@mixin pfe-navigation__menu-toggle--mobile {
  display: flex;
  margin: 0 0 0 auto;
}
@mixin pfe-navigation__menu-toggle--collapsed-menu {
  display: flex;
  margin: 0 auto 0 0;

  .pfe-navigation--no-main-menu & {
    // Main menu is the only thing in the mobile dropdown at tablet, so hide the button
    display: none;
  }
}
@mixin pfe-navigation__menu-toggle--desktop {
  display: none;
}
@mixin pfe-navigation__menu-toggle--active {
  box-shadow: inset 0 4px 0 0 pfe-local(highlight-color, $region: nav-bar);
  &[class] {
    $font-color: pfe-local(Color--active, $region: nav-bar);
    --pfe-icon--color: #{$font-color};

    color: $font-color;
    background: pfe-local(toggle--BackgroundColor--active, $region: nav-bar);
  }
  &:focus {
    @include alt-focus-styles(currentColor);
  }
}
@mixin pfe-navigation__menu-toggle--inactive {
  box-shadow: none;

  &[class] {
    background: transparent;
    color: pfe-local(Color--default, $region: nav-bar);
  }

  &:focus {
    @include alt-focus-styles(currentColor);
  }
}
.pfe-navigation__menu-toggle[class] {
  @include top-level-button--in-top-bar;
  @include pfe-navigation__menu-toggle--mobile;
  @include pfe-navigation__menu-toggle--inactive;
  position: relative;
  min-width: 50px; // Everything in it is absolutely positioned

  @include breakpoint('secondary-links-expand') {
    @include pfe-navigation__menu-toggle--collapsed-menu;
  }
  @include breakpoint('nav-expand') {
    @include pfe-navigation__menu-toggle--desktop;
  }
  @include collapse('nav') {
    @include pfe-navigation__menu-toggle--collapsed-menu;
  }
  @include collapse('secondary-links') {
    @include top-level-button--in-top-bar;
    @include pfe-navigation__menu-toggle--mobile;
  }

  // Active state
  [open-toggle='mobile__button'] &,
  [open-toggle^='main-menu__'] & {
    &[class] {
      @include pfe-navigation__menu-toggle--active;
    }
  }

  // Secondary link dropdown active behavior
  [open-toggle^='pfe-navigation__secondary-link--'] &,
  [open-toggle='secondary-links__button--search'] & {
    @include pfe-navigation__menu-toggle--active();
    @include breakpoint('secondary-links-expand') {
      @include pfe-navigation__menu-toggle--inactive;
    }
    @include collapse('secondary-links') {
      @include pfe-navigation__menu-toggle--active;
    }
  }
}

// Animating CSS Icon for burger
.pfe-navigation__burger-icon {
  // Icon Settings
  $animation-duration: 0.3s;
  $animation-timing: cubic-bezier(0.55, 0.085, 0, 0.99);
  $bar-width: 18px;
  $bar-width--active: 18px;
  $bar-height: 2px;
  $space-between-bars: 5px;
  // Creating the icon at an increased scale, then shrinking, creates a smoother looking icon
  // Avoids sub-pixel rounding issues and adds some nice anti-aliasing
  $scaling: 4;
  position: absolute;
  top: 25px; // Optically centers the icon with the others
  left: calc(50% - #{$bar-width / 2});
  transform: scale(#{1 / $scaling}) translateX(1px); // TranslateX was manually measured in browser to center icon
  transform-origin: left top;
  transition: transform $animation-duration $animation-timing;
  // Forces this icon to render separately
  backface-visibility: hidden;

  [aria-expanded='true'] & {
    transform: scale(#{1 / $scaling}) translateX(5px); // TranslateX was manually measured in browser to center icon
    transform-origin: left top;
  }

  // Upscale variables so icon starts off large, scale style on wrapper ensures final size
  $bar-width: $bar-width * $scaling;
  $bar-width--active: $bar-width--active * $scaling;
  $bar-height: $bar-height * $scaling;
  $space-between-bars: $space-between-bars * $scaling;


  &:before,
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    display: block;
    width: $bar-width;
  }

  &:before {
    $translate: translateY(#{($bar-height + $space-between-bars) * -1});
    $transform-origin: left top;
    height: 0;
    border-top: $bar-height solid currentColor;
    background: currentColor;
    transform: $translate;
    transform-origin: $transform-origin;
    transition:
      transform $animation-duration $animation-timing;

    [aria-expanded='true'] & {
      border-color: currentColor;
      transform:
        translateY(-32px) // Measured from DOM to make an X
        rotate(45deg)
        scaleX(#{$bar-width--active / $bar-width})
        translateX(12px); // Measured from DOM to make an X
      transform-origin: $transform-origin;
    }

  }

  &:after {
    $height: $bar-height * 2 + $space-between-bars;
    $transform-origin: left bottom;
    height: $height;
    border: $bar-height solid currentColor;
    border-width: $bar-height 0 $bar-height 0;
    transition:
      border $animation-duration  $animation-timing,
      transform $animation-duration  $animation-timing;
    transform-origin: $transform-origin;

    [aria-expanded='true'] & {
      transform:
        translateY(4px)
        rotate(-45deg)
        scaleX(#{$bar-width--active / $bar-width})
        translateX(12px);
      border-top-color: transparent;
      border-bottom-color: currentColor;
      transform-origin: $transform-origin;
    }
  }
}

[id="mobile__button-text"] {
  display: block;
  min-width: 50px - 16px; // Min-width of button - horizontal-padding
  grid-row: 2;
}


// @todo Fix specificity issues with mobile dropdown selector
.pfe-navigation__mobile-dropdown[class][class][class] {
  position: absolute;
  top: 100%;
  left: 0;
  display: none;
  width: 100%;
  height: calc(100vh - #{pfe-local(Height, $region: nav-bar)});
  margin: 0;
  padding:
    pfe-local(PaddingVertical, $region: mobile-dropdown)
    pfe-local(PaddingHorizontal, $region: mobile-dropdown);
  overflow-x: hidden;
  overflow-y: auto;
  background: pfe-local(Background, $region: dropdown);
  @include breakpoint('secondary-links-expand') {
    height: auto;
  }
  @include breakpoint('nav-expand') {
    overflow: visible;
  }
  @include collapse('nav') {
    overflow-y: auto;
  }
  @include collapse('secondary-links') {
    height: calc(100vh - #{pfe-local(Height, $region: nav-bar)});
  }

  // Open state
  [open-toggle='mobile__button'] &,
  [open-toggle^='main-menu__'] & {
    display: flex;
  }

  [open-toggle='secondary-links__button--search'] &,
  [open-toggle^='pfe-navigation__secondary-link--'] & {
    display: flex;
    @include breakpoint('secondary-links-expand') {
      display: none;
    }
    @include collapse('secondary-links') {
      display: flex;
    }
  }

  :host([pfe-sticky]) & {
    max-height: calc(100vh - #{pfe-local(Height, $region: nav-bar)});
    overflow-y: auto;
    @include breakpoint('nav-expand') {
      max-height: 9999em;
      overflow: visible;
    }
    @include collapse('nav') {
      max-height: calc(100vh - #{pfe-local(Height, $region: nav-bar)});
      overflow-y: auto;
    }
  }

}


// Outer menu wrapper layout
// --------------------------------------------------------
.pfe-navigation__outer-menu-wrapper,
.pfe-navigation__outer-menu-wrapper__inner {
  @include breakpoint('secondary-links-expand') {
    display: flex;
    align-items: stretch;
  }
  @include breakpoint('nav-expand') {
    flex-grow: 1;
  }
  @include collapse('nav') {
    flex-grow: 0;
  }
  @include collapse('secondary-links') {
    display: block;
  }
}

.pfe-navigation__outer-menu-wrapper {
  height: auto;

  @include breakpoint('nav-expand') {
    height: pfe-local(Height, $region: nav-bar);
  }
  @include collapse('nav') {
    height: auto;
  }

  :host(:not([open-toggle])) .pfe-navigation--is-resizing & {
    overflow: hidden;
  }
}

.pfe-navigation__outer-menu-wrapper__inner {
  // Opacity transition is to hide jank as the nav changes layout state
  $opacity-transition: opacity 0.25s pfe-local(fade-transition-delay) linear;

  width: 100%;
  opacity: 0;
  transition:
    transform 0.25s ease-in-out,
    $opacity-transition;
  @media (prefers-reduced-motion) {
    transition: $opacity-transition;
  }

  :host([breakpoint]) .pfe-navigation--processed & {
    opacity: 1;
  }

  :host([mobile-slide]) & {
    position: relative;
    transform: translate(-100vw);
    @include breakpoint('secondary-links-expand') {
      position: static;
      transform: none;
    }
    @include collapse('secondary-links') {
      position: relative;
      transform: translate(-100vw);
    }
  }
}

// Menu, List, & Items
// --------------------------------------------------------
.pfe-navigation__menu-wrapper {
  display: flex;
  @include breakpoint('nav-expand') {
    margin-right: auto;
  }
  @include collapse('nav') {
    margin-right: 0;
  }
}

// Menu
.pfe-navigation__menu,
.pfe-navigation__menu ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.pfe-navigation__menu {
  width: 100%;

  @media print {
    display: none!important;
  }

  @include breakpoint('nav-expand') {
    display: flex;
    align-items: stretch;
    width: auto;
  }
  @include collapse('nav') {
    display: block;
    width: 100%;
  }
}

// Menu Items
.pfe-navigation__menu-item {
  $collapsed-border-top: pfe-local(separator--Border, $region: dropdown);
  border-top: $collapsed-border-top;
  padding: 0;
  transition: border 0.5s 0.25s linear;
  @include breakpoint('nav-expand') {
    display: flex;
    align-items: stretch;
    border: none;
  }
  @include collapse('nav') {
    display: block;
    border-top: $collapsed-border-top;
  }

  &:last-child {
    $collapsed-border-bottom: pfe-local(separator--Border, $region: dropdown);
    border-bottom: $collapsed-border-bottom;
    @include breakpoint('nav-expand') {
      border: 0;
    }
    @include collapse('nav') {
      border-bottom: $collapsed-border-bottom;
    }
  }
}

.pfe-navigation__menu-item--open {
  $collapsed-border-shadow:
    inset 4px 0 0 0 pfe-local(highlight-color, $region: nav-bar),
    pfe-local(BoxShadow, $region: dropdown);
  box-shadow: $collapsed-border-shadow;
  @include breakpoint('nav-expand') {
    box-shadow: none;
  }
  @include collapse('nav') {
    box-shadow: $collapsed-border-shadow;
  }
}

// Top Level Menu Links
// Layout changes per breakpoint
// See comment at top of file
@mixin pfe-navigation__menu-link--mobile {
  width: 100%;
  max-height: 9999em;
  padding: 16px 24px;
  font-size: pfe-var(FontSize--xl);
  font-weight: 500;
  color: pfe-local(Color, $region: dropdown);
  background: transparent;
}
@mixin pfe-navigation__menu-link--desktop {
  width: auto;
  max-height: 72px;
  padding: 0 11px;
  font-size: pfe-var(FontSize--md);
  font-weight: 400;
  color: pfe-local(Color--default, $region: nav-bar);
}
.pfe-navigation__menu-link {
  @include top-level-button('nav');
  position: relative;
  // Default styles need a specificity bump to beat generic menu <a> styles
  &[class] {
    @include pfe-navigation__menu-link--mobile;
    @include breakpoint('nav-expand') {
      @include pfe-navigation__menu-link--desktop;
    }
  }
  @include collapse('nav') {
    @include pfe-navigation__menu-link--mobile;
  }
}

// Top level links that have a dropdown associated with them
.pfe-navigation__menu-link--has-dropdown {
  position: relative;

  &:focus {
    @include breakpoint('nav-expand') {
      @include alt-focus-styles(currentColor);
    }
    @include collapse('nav') {
      box-shadow: none;
    }
  }

  .pfe-navigation__menu-item--open > & {
    @include breakpoint('nav-expand') {
      $font-color: pfe-local(Color--active, $region: nav-bar);
      --pfe-icon--color: #{$font-color};

      color: $font-color;
      background: pfe-local(toggle--BackgroundColor--active, $region: nav-bar);
    }
    @include collapse('nav') {
      box-shadow: none;
      background: transparent;
    }

    &:focus {
      @include breakpoint('nav-expand') {
        @include alt-focus-styles(currentColor);
      }
    }
  }
}

.pfe-navigation__menu-link--has-dropdown {
  &:before {
    @include pfe-navigation__menu-link__before--mobile;
    content: '';

    @include breakpoint('nav-expand') {
      @include pfe-navigation__menu-link__before--desktop;
    }
    @include collapse('nav') {
      @include pfe-navigation__menu-link__before--mobile;
    }
  }

  // Update arrow color based on state
  &:focus:before,
  &:hover:before {
    @include breakpoint('nav-expand') {
      border-top-color: pfe-local(arrow--color, $region: dropdown);
    }
    @include collapse('nav') {
      @include pfe-navigation__menu-link__before--mobile;
      border-top-color: pfe-local(Color, $region: dropdown);
    }
  }

  .pfe-navigation__menu-item--open > &[class]:before { // [class] adds specificity to beat out hover/focus selector
    transform: translateY(7px) rotate(135deg);
    @include breakpoint('nav-expand') {
      border-top-color: pfe-local(arrow--color--active, $region: dropdown);
      transform: translate(-4px, -12px);
    }
    @include collapse('nav') {
      transform: rotate(135deg);
    }
  }
}


// Main menu dropdowns
// --------------------------------------------------------

// Dropdown wrapper - used for basic layout properties and animation
@mixin pfe-navigation__dropdown-wrapper--mobile {
  position: static;
  max-height: 9999em;
  // Desired padding plus negative margin on columns
  padding: 0 calc(#{pfe-local('full-width--spacing--mobile', $region: 'dropdown')} + #{pfe-local('single-column--spacing', $region: 'dropdown')});
  overflow-y: visible;
  background: transparent;
  transition: pfe-local(accordion-transition);
  @media (prefers-reduced-motion) {
    transition: none;
  }
}
@mixin pfe-navigation__dropdown-wrapper--desktop {
  position: absolute;
  top: 100%;
  left: 0;
  // Desired padding plus negative margin on columns
  padding: 0 calc(#{pfe-local('full-width--spacing--desktop', $region: 'dropdown')} + #{pfe-local('full-width--spacing--mobile', $region: 'dropdown')});
  background: pfe-local(Background, $region: dropdown);
  transition: pfe-local(dropdown-transition);

  :host([pfe-sticky]) & {
    max-height: calc(100vh - #{pfe-local(Height, $region: nav-bar)});
    overflow-y: auto;
  }

  @media (prefers-reduced-motion) {
    transition: none;
  }
}
.pfe-navigation__dropdown-wrapper {
  @include pfe-navigation__dropdown-wrapper--mobile;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  width: 100%;
  height: 0;
  overflow: hidden;
  will-change: height;
  @include breakpoint('nav-expand') {
    @include pfe-navigation__dropdown-wrapper--desktop;
    height: auto;
  }
  @include collapse('nav') {
    @include pfe-navigation__dropdown-wrapper--mobile;
    height: 0;
  }

  &.pfe-navigation__dropdown-wrapper--invisible {
    display: none;
  }
}

.pfe-navigation__dropdown-wrapper--single-column {
  @include single-column-dropdown('nav');
  @include breakpoint('nav-expand') {
    left: auto;
    width: auto;
  }
}

// Dropdown content wrapper - lays out dropdown internals
// Layout mixins are shared with lightdom styles, can be found in _variables-mixins.scss
.pfe-navigation__dropdown {
  @include pfe-navigation__dropdown-content-styling;
  @include pfe-navigation__dropdown-layout--mobile;
  font-size: pfe-var(FontSize--md);
  color: pfe-local(Color, $region: dropdown);
  visibility: hidden;
  transition: visibility 0s linear 0.4s;
  @include breakpoint('secondary-links-expand') {
    @include pfe-navigation__dropdown-layout--tablet;
  }
  @include breakpoint('nav-expand') {
    @include pfe-navigation__dropdown-layout--desktop;
  }
  @include collapse('nav') {
    @include pfe-navigation__dropdown-layout--tablet;
  }
  @include collapse('secondary-links') {
    @include pfe-navigation__dropdown-layout--mobile;
  }
  // @todo this is a workaround
  // Issue is on redhat.com Services, where breakpoint says mobile,
  // but collapse-secondary-links class doesn't fire
  :host([breakpoint='mobile']) & {
    @include pfe-navigation__dropdown-layout--mobile;
  }

  .pfe-navigation__menu-item--open & {
    visibility: visible;
    transition-delay: 0s;
  }

  > * {
    $mobile-margin: 0 0 18px;
    margin: $mobile-margin;
    break-inside: avoid;
    @include breakpoint('nav-expand') {
      margin: 0;
    }
    @include collapse('nav') {
      margin: $mobile-margin;
    }
  }
}

.pfe-navigation__dropdown--3-column {
  @include breakpoint('nav-expand') {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  @include collapse('nav') {
    @include pfe-navigation__dropdown-layout--tablet;
  }
}

.pfe-navigation__dropdown--single-column {
  &[class] {
    display: block;
    column-count: auto;
    gap: 0;
  }
  @include breakpoint('nav-expand') {
    padding: pfe-local('single-column--spacing', $region: 'dropdown') 0;
    background: pfe-local(Background, $region: dropdown);
  }
  @include collapse('nav') {
    background: transparent;
  }

  // group feature styles
  // @todo: verify if group headings are NEVER links
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  [role="heading"][aria-heading-level] {
    color: pfe-local(headings--single-column--Color, $region: dropdown);
    font-weight: 500;
    font-size: pfe-var(FontSize--sm);
  }
}

// single column dropdown group and separator style options
// separator class
.pfe-navigation__dropdown--single-column ul + ul,
.pfe-navigation__sub-nav-link--separator[class] {
  border-top: pfe-local(separator--Border, $region: dropdown);
  // Negative margin to counteract dropdown padding
  $negative-margin: calc(#{pfe-local('single-column--spacing', $region: 'dropdown')} * -1);
  margin-left: $negative-margin;
  margin-right: $negative-margin;
  margin-top: pfe-local('single-column--spacing', $region: 'dropdown');
  padding-left: pfe-local('single-column--spacing', $region: 'dropdown');
  padding-right: pfe-local('single-column--spacing', $region: 'dropdown');
  padding-top: pfe-local('single-column--spacing', $region: 'dropdown');
}

// footer styles for mega menu trays
@mixin pfe-navigation__footer-layout--mobile {
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}
@mixin pfe-navigation__footer-layout--tablet {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
}
.pfe-navigation__footer {
  @include pfe-navigation__footer-layout--mobile;
  $collapsed-margin: 16px 0 0;
  $collapsed-padding: 26px 0 16px;
  border-top: pfe-local(separator--Border, $region: dropdown);
  grid-column: 1 / -1; // col spans to the end of col grid line always
  column-span: all;
  margin: $collapsed-margin;
  padding: $collapsed-padding;
  @include breakpoint('secondary-links-expand') {
    @include pfe-navigation__footer-layout--tablet;
  }
  @include breakpoint('nav-expand') {
    // Should match dropdown layout at desktop
    @include pfe-navigation__dropdown-layout--desktop;
    margin: calc(var(--pfe-theme--container-padding,16px) * 2) 0 calc(var(--pfe-theme--container-padding,16px) * 1.5);
    padding: calc(var(--pfe-theme--container-padding,16px) * 2.5) 0 0;
  }
  @include collapse('nav') {
    @include pfe-navigation__dropdown-layout--mobile;
    margin: $collapsed-margin;
    padding: $collapsed-padding;
  }
  @include collapse('secondary-links') {
    @include pfe-navigation__footer-layout--tablet;
  }

  .pfe-navigation--column, // @note v1.x support
  a,
  pfe-cta {
    margin: 0 0 1em;

    + .pfe-navigation--column, // @note v1.x support
    + a,
    + pfe-cta {
      @include breakpoint('secondary-links-expand') {
        margin-left: pfe-local(gutter);
      }
      @include breakpoint('nav-expand') {
        margin-left: 0;
      }
      @include collapse('nav') {
        margin-left: pfe-local(gutter);
      }
      @include collapse('secondary-links') {
        margin-left: 0;
      }
    }
  }

  pfe-cta a {
    display: inline-block; // Display block was causing display issues
    margin: 0;
  }
}

// Search
// --------------------------------------------------------
.pfe-navigation__search-toggle {
  :host([breakpoint='mobile']) & {
    display: none;
  }

  [open-toggle='secondary-links__button--search'] & {
    $font-color: pfe-local(Color--active, $region: nav-bar);
    --pfe-icon--color: #{$font-color};

    color: $font-color;
    background: pfe-local(toggle--BackgroundColor--active, $region: nav-bar);
    box-shadow: inset 0 4px 0 0 pfe-local(highlight-color, $region: nav-bar);

    &:focus {
      @include alt-focus-styles(currentColor);
    }
  }
}

// Out specifying default dropdown wrapper styles that have state classes and attributes in selectors
.pfe-navigation__dropdown-wrapper--search[class][class] {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: auto;
  padding: 16px;
  margin-bottom: 0;
  background: pfe-local(Background, $region: dropdown);
  // Hide this element unless search is present
  visibility: hidden;

  :host([breakpoint="tablet"]) .pfe-navigation--has-search &,
  :host([breakpoint="desktop"]) .pfe-navigation--has-search & {
    visibility: visible;
  }

  // Extra specificity to beat js breakpoints
  &.pfe-navigation__dropdown-wrapper--invisible {
    display: none;
  }
}

.pfe-navigation__search {
  $mobile-margin-bottom: pfe-local('full-width--spacing--mobile', $region: 'dropdown');
  display: block;
  width: 100%;
  margin-bottom: $mobile-margin-bottom;
  color: pfe-local(Color, $region: dropdown);
  max-width: pfe-local(content-max-width);
  margin-left: auto;
  margin-right: auto;

  @include breakpoint('secondary-links-expand') {
    margin-bottom: 0;
  }
  @include collapse('secondary-links') {
    margin-bottom: $mobile-margin-bottom;
  }

  // @todo Search expansion to update to height animation
  [aria-hidden='true'] & {
    visibility: hidden;
  }
}

// Secondary Links
// --------------------------------------------------------
.pfe-navigation__secondary-links-wrapper {
  $mobile-padding-top: 16px;
  display: flex;
  // @note Flex direction is used by pfeNavigation.isSecondaryLinksSectionCollapsed() to determine layout state
  flex-direction: column;
  margin: 0;
  padding: $mobile-padding-top 0 0;
  list-style: none;
  @include breakpoint('secondary-links-expand') {
    flex-direction: row;
    margin-left: auto;
    padding-top: 0;
  }
  @include collapse('secondary-links') {
    flex-direction: column;
    padding-top: $mobile-padding-top;
    margin-left: 0;
  }

  > li {
    @include secondary-links-li;
  }
}

// Animating CSS Icon for burger
.pfe-navigation__burger-icon {
  // Icon Settings
  $animation-duration: 0.3s;
  $animation-timing: cubic-bezier(0.55, 0.085, 0, 0.99);
  $bar-width: 18px;
  $bar-width--active: 18px;
  $bar-height: 2px;
  $space-between-bars: 6px;
  // Creating the icon at an increased scale, then shrinking, creates a smoother looking icon
  // Avoids sub-pixel rounding issues and adds some nice anti-aliasing
  $scaling: 4;

  @include secondary-links-icon--in-black-bar;
  left: calc(50% - #{$bar-width / 2});
  transform: scale(#{1 / $scaling}) translateX(1px); // TranslateX was manually measured in browser to center icon
  transform-origin: left top;
  transition: transform $animation-duration $animation-timing;
  // Forces this icon to render separately
  backface-visibility: hidden;

  [aria-expanded='true'] & {
    transform: scale(#{1 / $scaling}) translateX(5px); // TranslateX was manually measured in browser to center icon
    transform-origin: left top;
  }

  // Upscale variables so icon starts off large, scale style on wrapper ensures final size
  $bar-width: $bar-width * $scaling;
  $bar-width--active: $bar-width--active * $scaling;
  $bar-height: $bar-height * $scaling;
  $space-between-bars: $space-between-bars * $scaling;

  &:before,
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    display: block;
    width: $bar-width;
  }

  &:before {
    $translate: translateY(#{($bar-height + $space-between-bars) * -1});
    $transform-origin: left top;
    height: 0;
    border-top: $bar-height solid currentColor;
    background: currentColor;
    transform: $translate;
    transform-origin: $transform-origin;
    transition:
      transform $animation-duration $animation-timing;

    [aria-expanded='true'] & {
      border-color: currentColor;
      transform:
        $translate rotate(45deg)
        scaleX(#{$bar-width--active / $bar-width})
        translateX(12px);
      transform-origin: $transform-origin;
    }

  }

  &:after {
    $height: $bar-height * 2 + $space-between-bars;
    $transform-origin: left bottom;
    height: $height;
    border: $bar-height solid currentColor;
    border-width: $bar-height 0 $bar-height 0;
    transition:
      border $animation-duration  $animation-timing,
      transform $animation-duration  $animation-timing;
    transform-origin: $transform-origin;

    [aria-expanded='true'] & {
      transform:
        rotate(-45deg)
        scaleX(#{$bar-width--active / $bar-width})
        translateX(12px);
      border-top-color: transparent;
      border-bottom-color: currentColor;
      transform-origin: $transform-origin;
    }
  }
}

.pfe-navigation__log-in-link,
.pfe-navigation__account-toggle {
  @include top-level-button--in-top-bar;

  @media print {
    display: none;
  }

  // Competing with specificity of js breakpoint class
  @include collapse('secondary-links') {
    @include top-level-button--in-top-bar;
  }
}

// @todo: (KS) add styles to hide account toggle and show the account link when logged-in class does NOT exist
.pfe-navigation__account-wrapper {

  .pfe-navigation__account-wrapper--logged-in {
    // Show account toggle if logged in
    .pfe-navigation__account-toggle {
      display: flex;
    }
    // Hide login link if logged in
    .pfe-navigation__log-in-link {
      display: none;
    }
  }

}

.pfe-navigation__log-in-link {
  .pfe-navigation__account-wrapper--logged-in &[class] {
    display: none;
  }

  &[class][class] pfe-icon {
    // Make sure icon has no padding,
    // specificity bump to override default secondary link behavior
    @include secondary-links-icon--in-black-bar;
  }
}

.pfe-navigation__account-toggle {
  height: pfe-local(Height, $region: 'nav-bar');

  // Fighting specificity for these styles
  &[class][class][class] {
    display: flex;
    justify-content: center;
  }

  &[aria-expanded='true'] {
    $font-color: pfe-local(Color--active, $region: nav-bar);
    --pfe-icon--color: #{$font-color};

    color: $font-color;
    background: pfe-local(toggle--BackgroundColor--active, $region: 'nav-bar');
    box-shadow: inset 0 4px 0 0 pfe-local(highlight-color, $region: nav-bar);

    &:focus {
      @include alt-focus-styles(pfe-local(Color--active, $region: 'nav-bar'));
    }
  }

  pfe-avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    overflow: hidden;
    background: rgba(122, 122, 122, 0.2);
  }
}

.pfe-navigation__dropdown-wrapper--account {
  // Out specifying JS breakpoint selectors
  &[class][class] {
    position: absolute;
    top: pfe-local(Height, $region: nav-bar);
    left: 0;
    width: 100%;
    display: block;
    padding: 0;
    height: auto;
  }

  &.pfe-navigation__dropdown-wrapper--invisible[class] {
    display: none;
  }
}

// Should stay at the end of the file
@import "sass-includes/pfe-navigation--utility-classes";
