// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";
$LOCAL: navigation;

/// PFE-Local setup variables
/// These variables will be namespaced and become css vars
$LOCAL-VARIABLES: (
  gutter: 32px,
  accordion-transition: height 0.25s ease-in-out,
  content-max-width: 1136px,
  FontFamily: #{"Red Hat Text", "RedHatText", Arial, Helvetica, sans-serif},
  ZIndex: pfe-zindex(navigation),
  overlay--Background: rgba(21, 21, 21, 0.5),
  fade-transition-delay: 1s,

  logo: (
    // maxWidth: // Is calculated by JS and never used in component's SCSS
    height: auto,
  ),

  nav-bar: (
    Height: 72px,
    Background: #151515,
    // Background: pfe-var(surface-darkest), // @todo Switch to this when branch is updated
    Color--default: pfe-var(ui-base--text),
    Color--active: pfe-var(text),
    toggle--BackgroundColor--active: pfe-var(surface--lightest),
    highlight-color:  pfe-var(ui-accent), // Used for hover over menu items and alerts
    Color--on-highlight: pfe-var(text--on-saturated),
    alert-color: pfe-var(link),
  ),

  dropdown: (
    Color: #151515,
    Color--on-highlight: pfe-var(text--on-dark),
    Color--secondary:pfe-var(text--muted),
    Background: pfe-var(surface--lightest),
    link--Color: pfe-var(link),
    link--Color--hover: #036, // @todo Doesn't exist in our palette?
    headings--Color: #464646,
    headings--single-column--Color: #6A6E73,
    separator--Border: 1px solid pfe-var(ui--border--lighter),
    BoxShadow: 0 1px 2px rgba(0, 0, 0, 0.12),
    arrow--color: #6A6E73,
    arrow--color--active: #6A6E73,
    highlight-color: pfe-var(ui-accent), // Used for hover over menu items
    single-column--spacing: 16px,
    full-width--spacing--mobile: 24px,
    full-width--spacing--desktop: 64px,
    pfe-cta--BackgroundColor: #e00,
    pfe-cta--hover--BackgroundColor: #c00,
  ),

  mobile-dropdown: (
    PaddingVertical: 16px,
    PaddingHorizontal: 32px,
  ),

  skip-link: (
    Color: pfe-var(link),
    BackgroundColor: pfe-var(surface--lightest),
  ),
);

/// Breakpoints
/// secondary-links-expand and nav-expand are functional breakpoints
/// Their value should match an existing breakpoint, and be above the breakpoint they're matching
$breakpoints: (
  sm:  576px,
  // The place where secondary links *could* expand, JS breakpoints may catch that there isn't enough room
  secondary-links-expand: 768px,
  md:  768px,
  lg:  992px,
  // Where the nav *could* expand, JS breakpoints may catch that there isn't enough room
  nav-expand: 1200px,
  xl:  1200px,
  2xl: 1368px,
);

// @todo Use these breakpoints when branch is updated to where these exist
// $breakpoints: (
//   sm:  map-get($pfe-var, grid-breakpoint--sm), // 576px
//   // The place where secondary links *could* expand, JS breakpoints may catch that there isn't enough room
//   secondary-links-expand: map-get($pfe-var, grid-breakpoint--md), // 768px
//   md:  map-get($pfe-var, grid-breakpoint--md), // 768px
//   lg:  map-get($pfe-var, grid-breakpoint--lg), // 992px
//   // Where the nav *could* expand, JS breakpoints may catch that there isn't enough room
//   nav-expand: map-get($pfe-var, grid-breakpoint--xl), // 1200px
//   xl:  map-get($pfe-var, grid-breakpoint--xl), // 1200px
//   2xl: 1368px,
// );


/// Breakpoint helper specific to pfe-navigation
/// @param {string} $breakpoint Name of a breakpoint
/// @see $breakpoints
@mixin breakpoint($breakpoint) {
  @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
    @content;
  }
}

/// JS triggered 'breakpoints' if there isn't room for a section a class is added to collapse it
/// Styles in collapse should undo _desktop layout changes_ that the related breakpoint makes.
/// @example
///   pfe-navigation {
///     display: block;
///     margin: 10px 0 0;
///     @include breakpoint('nav-expand') {
///       display: flex;
///       margin: 20px 40px;
///     }
///     @include collapse(nav) {
///       display: block;
///       margin: 10px 0 0;
///     }
///   }
/// @param {string} $section Can be 'nav' or 'secondary-links'
@mixin collapse($section) {
  @if $section == 'nav' {
    :host(.pfe-navigation--collapse-main-menu) &,
    .pfe-navigation--collapse-main-menu & {
      @content;
    }
  }
  @else if $section == 'secondary-links' {
    :host(.pfe-navigation--collapse-secondary-links) &,
    .pfe-navigation--collapse-secondary-links & {
      @content;
    }
  }
}

/// sr-only class (same as Bootstrap 4 sr-only class)
/// hide element from everyone except screen readers
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

/// sr-only class
/// can be used in shadow DOM and light DOM stylesheets
// @todo: add note to docs to recommend content editors and devs use this class version when they need to make something only available to screen readers. The Drupal classes are a fallback for compatibility with Drupal content.
.sr-only,
/// Drupal 7 & 8 class version of sr-only class
/// can be used in shadow DOM and light DOM stylesheets
.visually-hidden,
.element-invisible {
  @include sr-only;
}

/// Focus indicator styles specific to pfe-navigation
/// @param {string} $border-color Color of dashed border (white or black depending on bg-color)
/// @param {string} $border-top-size Size of border-top (0px or 1px depending on which navigation main/mega menu)
@mixin focus-styles($border-color, $border-top-size) {
  border: 1px dashed $border-color;
  border-top: $border-top-size dashed $border-color;
  outline: 0;
}

/// Focus indicator styles specific to pfe-navigation, alternative option for elements with box-shadow bar at the top
/// @param {string} $border-color Color of dashed border (white or black depending on bg-color)
@mixin alt-focus-styles($border-color) {
  outline: 0;
  &:after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    top: 0;
    left:0;
    display: block;
    border: 1px dashed $border-color;
  }
}

//
// Light DOM & Shadow DOM shared styles
// --------------------------------------------------------
@mixin pfe-navigation__wrapper {
  position: relative;
  z-index: pfe-local(ZIndex);
  display: flex;
  align-items: stretch;
  height: pfe-local(Height, $region: nav-bar);
  font-size: pfe-var(FontSize--md);
  line-height: 1.5;
  font-family: pfe-local(FontFamily);
  color: pfe-local(Color--default, $region: nav-bar);
  background: pfe-local(Background, $region: nav-bar);
}
@mixin pfe-navigation__wrapper--mobile {
  max-width: 9999em;
  margin: 0;
  padding: 0 16px;
}
@mixin pfe-navigation__wrapper--collapsed-menu {
  max-width: 9999em;
  margin: 0;
  padding: 0 16px;
}
@mixin pfe-navigation__wrapper--desktop {
  margin: 0 auto;
  padding: 0 32px;
}

@mixin pfe-navigation__logo-wrapper {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin: 0;
  padding: 10px 16px 10px 0;

  .pfe-navigation--no-main-menu & {
    // If there isn't a main menu at tablet, logo needs to push secondary links to right side
    @include breakpoint('secondary-links-expand') {
      margin-right: auto;
    }
    @include collapse('secondary-links') {
      margin-right: 0;
    }
  }
}

// @todo: determine why the ..__logo-link style block is present twice, remove if duplicate is merge accident
@mixin pfe-navigation__logo-link {
  position: relative;
  display: block;
  padding: 6px 8px;
  margin-left: -8px; // Should be flush left with container
  outline: none;
  border-radius: 3px;

  &:focus {
    @include alt-focus-styles(#fff);
  }
}

@mixin pfe-navigation__logo-image {
  display: block;
  width: 100%;
  height: auto;

  // @note Can't enfoce logo height on screen sizes below 500px
  // it can force the burger and avatar off the side of the page
  @include breakpoint(sm) {
    width: auto;
    // If this value changes, it needs to be updated in JS this.logoHeights
    height: pfe-local(height, $region: logo, $fallback: 40px);
  }

  @media print {
    display: none;
  }

  // In case there isn't a mobile and desktop version
  &:only-child {
    display: block;
  }

  &.pfe-navigation__logo-image--small {
    // @note Can't enfoce logo height on screen sizes below 500px
    // it can force the burger and avatar off the side of the page
    @include breakpoint(sm) {
      // If this value changes, it needs to be updated in JS this.logoHeights
      height: pfe-local(height, $region: logo, $fallback: 32px);
    }
  }

  &.pfe-navigation__logo-image--screen {
    @media print {
      display: none!important;
    }
  }
  &.pfe-navigation__logo-image--print {
    @media screen {
      display: none!important;
    }
  }

  &.pfe-navigation__logo-image--screen.pfe-navigation__logo-image--print {
    display: inline-block!important;
  }
}

@mixin secondary-links-icon {
  --pfe-icon--size: 18px;
  padding-right: 5px;
  @include breakpoint('secondary-links-expand') {
    padding-right: 0px;
  }
  @include collapse('secondary-links-expand') {
    padding-right: 5px;
  }
}

@mixin secondary-links-icon--in-black-bar {
  padding: 2px 0 4px;
}

@mixin secondary-links-icon--in-mobile-dropdown {
  padding: 0 16px 0 0;
}

@mixin top-level-button--in-top-bar {
  $font-color: pfe-local(Color--default, $region: nav-bar);
  --pfe-icon--color: #{$font-color};

  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  width: auto;
  height: pfe-local(Height, $region: nav-bar);
  padding: 14px 8px;
  font-size: var(--pfe-navigation--FontSize--xs, 12px);
  color: $font-color;
  @supports (display: grid) {
    display: grid;
    grid-template-rows: 26px 18px;
    align-items: center;
    justify-items: center;
  }

  &[class]:focus,
  &[class]:hover {
    box-shadow: inset 0 4px 0 0 pfe-local(highlight-color, $region: nav-bar);
  }
}

/// Top level button styles
/// @param {string} $menu-name Name of the menu dropdown is in (nav or secondary-links)
@mixin top-level-button($menu-name: 'secondary-links') {
  $font-color: pfe-local(link--Color, $region: dropdown);
  --pfe-icon--color: #{$font-color};

  $padding-mobile: 8px 24px;
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  margin: 0;
  padding: $padding-mobile;
  border: 0;
  white-space: nowrap;
  font-family: inherit;
  font-size: pfe-var(FontSize--md);
  color: pfe-local(link--Color, $region: dropdown);
  text-align: center;
  text-decoration: none;
  background: transparent;
  outline: none;
  appearance: none;
  cursor: pointer;
  @if $menu-name is 'secondary-links' {
    justify-content: flex-start;
  }

  @media print {
    display: none!important;
  }

  @if $menu-name == 'secondary-links' {
    @include breakpoint('secondary-links-expand') {
      @include top-level-button--in-top-bar;
    }
    @include collapse('secondary-links-expand') {
      --pfe-icon--color: #{$font-color};
      display: flex;
      flex-direction: row;
      justify-content: normal;
      justify-items: normal;
      width: 100%;
      height: auto;
      padding: $padding-mobile;
      font-size: pfe-var(FontSize--md);
      color: $font-color;
    }
  }

  &:hover,
  &:focus {
    box-shadow: inset 4px 0 0 0 pfe-local(highlight-color, $region: nav-bar);
    @include breakpoint(#{$menu-name + '-expand'}) {
      box-shadow: inset 0 4px 0 0 pfe-local(highlight-color, $region: nav-bar);
    }
    @include collapse($menu-name) {
      box-shadow: inset 4px 0 0 0 pfe-local(highlight-color, $region: nav-bar);
    }
  }

  &:focus {
    @include alt-focus-styles(currentColor);
  }

  pfe-icon {
    // Addresses Safari issue where clicking on the SVG didn't activate the button
    pointer-events: none;
  }

  @if $menu-name == 'secondary-links' {
    > pfe-icon,
    .secondary-link__icon-wrapper {
      @include secondary-links-icon;
      @include breakpoint(#{$menu-name + '-expand'}) {
        @include secondary-links-icon--in-black-bar;
      }
      @include collapse($menu-name) {
        @include secondary-links-icon--in-mobile-dropdown;
      }
    }

    pfe-icon {
      display: block;
      height: 18px;
    }
  }
}

// Styles for the no-JS secondary link li tags
// And the with JS shadow DOM secondary links li tags
@mixin secondary-links-li {
  display: block;
  width: auto;
  height: auto;
  margin: 0 0 8px;
  padding: 0;
  list-style: none;
  @include breakpoint('secondary-links-expand') {
    margin: 0;
  }
  @include collapse('secondary-links') {
    margin: 0 0 8px;
  }
}

/// Provides styles for a single column dropdown
/// @param {string} $menu-name Name of the menu dropdown is in (nav or secondary-links)
@mixin single-column-dropdown($menu-name: nav) {
  // Desired padding plus negative margin on columns
  padding: 0 calc(#{pfe-local('full-width--spacing--mobile', $region: 'dropdown')} + #{pfe-local('single-column--spacing', $region: 'dropdown')});
  @include breakpoint("#{$menu-name}-expand") {
    position: absolute;
    top: 100%;
    max-width: 100%;
    min-width: 13em; // Trying to make sure it's larger than the top level menu link
    // Desired padding plus negative margin on columns
    padding: 0 #{16px + 16px};
    box-shadow: pfe-local(BoxShadow, $region: dropdown);
  }
  @include collapse($menu-name) {
    position: static;
    max-width: 100%;
    box-shadow: none;
  }
}

/// Dropdown layout styles
@mixin pfe-navigation__dropdown-layout--mobile {
  display: block;
  width: calc(100% + 32px);
  max-width: #{pfe-local(content-max-width)};
  margin-left: -16px;
  margin-right: -16px;
  padding-top: 12px;
  padding-bottom: 12px;
  column-count: auto;
  gap: 0;
}
@mixin pfe-navigation__dropdown-layout--tablet {
  display: block;
  column-count: 3;
  gap: pfe-local(gutter);
  padding-top: 12px;
  padding-bottom: 12px;
}
@mixin pfe-navigation__dropdown-layout--desktop {
  // @note IE11/ShadyCss styles
  display: flex;
  flex-wrap: wrap;

  // @note Protects IE11 from itself because of the amount of grid bugs
  @supports (display: grid) {
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    gap: pfe-local(gutter);
    grid-auto-flow: row;
  }
  column-count: auto;
  padding-top: 32px;
  padding-bottom: 32px;
}

@mixin default-link-styles {
  a {
    display: inline-block;
    color: pfe-local(link--Color, $region: dropdown);

    // avoid jumpiness caused by focus/hover styles
    border: 1px solid transparent;

    &:focus,
    &:hover {
      color: pfe-local(link--Color--hover, $region: dropdown);
      text-decoration: underline;
    }

    &:focus {
      @include focus-styles(currentColor, 1px);
    }
  }
}

/// Styles to be applied to dropdown content
@mixin pfe-navigation__dropdown-content-styling {
  @include default-link-styles;

  h2,
  h3,
  h4,
  h5,
  h6,
  [role="heading"][aria-heading-level],
  .pfe-link-list--header {
    margin: pfe-local(gutter) 0 0.75em;
    padding: 0;
    break-inside: avoid;
    font-size: pfe-var(FontSize--lg); // --pfe-global--FontSize-lg
    font-weight: normal;
    color: pfe-local(headings--Color, $region: dropdown);

    &:first-child {
      margin-top: 0;
    }

    a {
      color: pfe-local(headings--Color, $region: dropdown);
      // avoid jumpiness caused by focus/hover styles
      border: 1px solid transparent;
      text-decoration: underline;

      &:hover,
      &:focus {
        text-decoration: none;
        color: pfe-local(link--Color--hover, $region: dropdown);
      }

      &:focus {
        // focus styles
        @include focus-styles(currentColor, 1px);
      }
    }
  }

  li {
    margin: 0 0 16px; // --pf-global--spacer-md
    break-inside: avoid;
  }

  // Any other tags we don't want to break inside of, in case site uses
  // CSS Columns utility class
  a,
  pfe-cta,
  pfe-card {
    break-inside: avoid;
  }

  pfe-cta {
    // margin-top: pfe-local(gutter);

    &[priority='primary'],
    &[pfe-priority='primary'] {
      --pfe-cta--BackgroundColor: #{pfe-local(pfe-cta--BackgroundColor, $region: dropdown)};
      --pfe-cta--BackgroundColor--hover: #{pfe-local(pfe-cta--hover--BackgroundColor, $region: dropdown)};
      --pfe-theme--ui--border-width: 0;

      &:hover,
      &:focus {
        --pfe-cta--BackgroundColor: #{pfe-local(pfe-cta--hover--BackgroundColor, $region: dropdown)};
      }
    }

    pfe-card & {
      margin-top: 0;
    }
  }
}

// Top Level menu link arrow icon (no image, made with CSS)
@mixin pfe-navigation__menu-link__before--mobile {
  position: absolute;
  top: 50%;
  left: auto;
  right: 24px;
  display: block;
  width: 11px;
  height: 11px;
  border: 4px solid currentColor;
  border-bottom: 0;
  border-left: 0;
  transform:  translateX(4px) rotate(45deg);
  transform-origin: right top;
  transition: transform 0.25s;
}
@mixin pfe-navigation__menu-link__before--desktop {
  position: absolute;
  top: 100%;
  left: 50%;
  right: auto;
  width: 0;
  height: 0;
  border: 4px solid transparent;
  border-bottom: 0;
  transform: translate(-4px, -14px);
  transition: none;
}
// Back to menu icon
@mixin pfe-navigation__back__before--mobile {
  position: absolute;
  top: 27px; // Aligns the CSS left caret icon to the vertical center of the button text
  left: 35px;
  right: auto;
  display: block;
  width: 8px;
  height: 8px;
  border: 2px solid pfe-local(link--Color, $region: dropdown); // @todo Not sure if this var being based on link color makes sense
  border-top: 0;
  border-right: 0;
  transform: rotate(45deg);
  transform-origin: left top;
}
