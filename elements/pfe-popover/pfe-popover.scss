:host {
  display: inline;
}

[hidden] {
  visibility: hidden !important;
}

#container {
  display: inline-flex;
  position: relative;
  --_floating-arrow-size: var(--pf-c-popover__arrow--Width, var(--pf-global--arrow--width-lg, 1.5625rem));
}

#invoker {
  display: inline-block;
  position: relative;
}

#popover {
  display: block;
  opacity: 0;
  z-index: -1;
  transition: visibility 0s, opacity 300ms cubic-bezier(0.54, 1.5, 0.38, 1.11) 0s;
  left: 0;
  top: 0;
  translate: var(--_floating-content-translate);
  box-shadow: var(--pf-c-popover--BoxShadow,
  var(--pf-global--BoxShadow--lg,
  0 0.5rem 1rem 0 rgba(3, 3, 3, 0.16), 0 0 0.375rem 0 rgba(3, 3, 3, 0.08)));
}

.open #popover {
  opacity: 1;
  z-index: 9999;
}

:host([no-padding]) [part="content"] {
  padding: 0;
}

:host([auto-width]) [part="content"] {
  // todo?: is this the correct approach?
  --pf-c-popover--MinWidth: auto;
  --pf-c-popover--MaxWidth: none;
}

[part="content"] {
  position: relative;
  padding:
    var(--pf-c-popover__content--PaddingTop,
      var(--pf-global--spacer--md, 1rem))
    var(--pf-c-popover__content--PaddingRight,
      var(--pf-global--spacer--md, 1rem))
    var(--pf-c-popover__content--PaddingBottom,
      var(--pf-global--spacer--md, 1rem))
    var(--pf-c-popover__content--PaddingLeft,
      var(--pf-global--spacer--md, 1rem));
  word-break: break-word;
  line-height: var(--pf-c-popover--line-height, 1.5);
  font-size: var(--pf-c-popover__content--FontSize,
    var(--pf-global--FontSize--sm, 0.875rem));
  color: var(--pf-c-popover__content--Color,
    var(--pf-global--Color--100, #151515));
  background-color: var(--pf-c-popover__content--BackgroundColor,
    var(--pf-global--BackgroundColor--100, #fff));
  max-width: var(--pf-c-popover--MaxWidth, 18.75rem);
  width: max-content;
  }

[part="content"]::after {
  background-color: var(--pf-c-popover__content--BackgroundColor,
    var(--pf-global--BackgroundColor--100, #fff));
  box-shadow: var(--pf-c-popover--BoxShadow,
    var(--pf-global--BoxShadow--lg,
    0 0.5rem 1rem 0 rgba(3, 3, 3, 0.16), 0 0 0.375rem 0 rgba(3, 3, 3, 0.08)));
  content: '';
  display: block;
  height: var(--_floating-arrow-size);
  rotate: 45deg;
  width: var(--_floating-arrow-size);
  z-index: -1;
}

#popover,
[part="content"]::after {
  position: absolute;
}

[part="close-button"] {
  cursor: pointer;
  position: absolute;
  right: var(--pf-c-popover--c-button--Right, calc(var(--pf-c-popover__content--PaddingRight, 1rem) - var(--pf-global--spacer--md, 1rem)));
  top:  var(--pf-c-popover--c-button--Top, calc(var(--pf-c-popover__content--PaddingTop, 1rem) - var(--pf-global--spacer--form-element, 0.375rem)));
}

[part="content"] > [part="close-button"] + * {
  padding-right: var(--pf-c-popover--c-button--sibling--PaddingRight, var(--pf-global--spacer--2xl, 3rem));
}

[part="header"] {
  display: flex;
  align-items: baseline;
}

[part="icon"] {
  color: var(--pf-c-popover__title-icon--Color, var(--pf-global--Color--100, #151515));
  margin-right: var(--pf-c-popover__title-icon--MarginRight, var(--pf-global--spacer--sm, .5rem));
}

[part="icon"] ::slotted(*), [part="icon"] * {
  vertical-align: -0.125em;
}

[part="icon"], [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover__title-text--Color, inherit);
  font-size: var(--pf-c-popover__title--FontSize, var(--pf-global--FontSize--md, 1rem));
  // todo?: why doesn't pfe-icon inherit it's font-size from container
  --pfe-icon--size: var(--pf-c-popover__title--FontSize, var(--pf-global--FontSize--md, var(--pf-global--icon--FontSize--md, 1rem)));
  font-weight: var(--pf-global--FontWeight--normal, 400);
}

// todo?: can this be combined into one selector to style slotted and fallback content?
[part="title"]::slotted(:is(h2, h3, h4, h5, h6)), [part="title"] :is(h2, h3, h4, h5, h6) {
  margin-top: 0;
  margin-bottom: var(--pf-c-popover__title--MarginBottom, var(--pf-global--spacer--sm, .5rem));
  font-family: var(--pf-c-popover__title--FontFamily, var(--pf-global--FontFamily--heading--sans-serif, "RedHatDisplay", "Overpass", overpass, helvetica, arial, sans-serif));
  line-height: var(--pf-c-popover__title--LineHeight, var(--pf-global--LineHeight--md, 1.5));
}

[part="body"] {
  word-wrap: break-word;
}

[part="footer"] {
  margin-top: var(--pf-c-popover__footer--MarginTop, var(--pf-global--spacer--md, 1rem));
}

.left #content::after          { right: calc(-0.5 * var(--_floating-arrow-size)); }
.left.center #content::after   { top: calc(50% - 0.5 * var(--_floating-arrow-size)); }
.left.start #content::after    { top: var(--_floating-arrow-size); }
.left.end #content::after      { bottom: var(--_floating-arrow-size); }

.top #content::after           { top: calc(100% - 0.5 * var(--_floating-arrow-size)); }
.top.center #content::after    { right: calc(50% - 0.5 * var(--_floating-arrow-size)); }
.top.start #content::after     { left: var(--_floating-arrow-size); }
.top.end #content::after       { right: var(--_floating-arrow-size); }

.right #content::after         { right: calc(100% - 0.5 * var(--_floating-arrow-size)); }
.right.center #content::after  { top: calc(50% - 0.5 * var(--_floating-arrow-size)); }
.right.start #content::after   { top: var(--_floating-arrow-size); }
.right.end #content::after     { bottom: var(--_floating-arrow-size); }

.bottom #content::after        { bottom: calc(100% - 0.5 * var(--_floating-arrow-size)); }
.bottom.center #content::after { right: calc(50% - 0.5 * var(--_floating-arrow-size)); }
.bottom.start #content::after  { left: var(--_floating-arrow-size); }
.bottom.end #content::after    { right: var(--_floating-arrow-size); }

// todo?: is there a more concise way of doing this? don't judge meee
// default
:host([alert-severity="default"]) [part="icon"] {
  color: var(--pf-c-popover--m-default__title-icon--Color, var(--pf-global--default-color--200, #009596));
}
:host([alert-severity="default"]) [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), :host([alert-severity="default"]) [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover--m-default__title-text--Color, var(--pf-global--default-color--300, #003737));
}
// info
:host([alert-severity="info"]) [part="icon"] {
  color: var(--pf-c-popover--m-info__title-icon--Color, var(--pf-global--info-color--100, #2b9af3));
}
:host([alert-severity="info"]) [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), :host([alert-severity="info"]) [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover--m-info__title-text--Color, var(--pf-global--info-color--200, #002952));
}
// warning
:host([alert-severity="warning"]) [part="icon"] {
  color: var(--pf-c-popover--m-warning__title-icon--Color, var(--pf-global--warning-color--100, #f0ab00));
}
:host([alert-severity="warning"]) [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), :host([alert-severity="warning"]) [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover--m-warning__title-text--Color, var(--pf-global--warning-color--200, #795600));
}
// success
:host([alert-severity="success"]) [part="icon"] {
  color: var(--pf-c-popover--m-success__title-icon--Color, var(--pf-global--success-color--100, #3e8635));
}
:host([alert-severity="success"]) [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), :host([alert-severity="success"]) [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover--m-success__title-text--Color, var(--pf-global--success-color--200, #1e4f18));
}
// danger
:host([alert-severity="danger"]) [part="icon"] {
  color: var(--pf-c-popover--m-danger__title-icon--Color, var(--pf-global--danger-color--100, #c9190b));
}
:host([alert-severity="danger"]) [part="title"]::slotted(:is(h2, h3, h4, h5, h6)), :host([alert-severity="danger"]) [part="title"] :is(h2, h3, h4, h5, h6) {
  color: var(--pf-c-popover--m-danger__title-text--Color, var(--pf-global--danger-color--200, #a30000));
}