@use "@patternfly/patternfly/sass-utilities/all" as *;
@use "@patternfly/pfe-sass" as *;
@use "sass:map";

@import "shared-assets";

@include configure(
  $name: 'progress-steps',
  $variables: map.deep-merge(get-local-variables(), (
    progress-bar: (
      color: pfe-var(ui--border--lighter),
      color--active: pfe-var(ui-accent),
      thickness: pfe-var(ui--border-width--md)
    ),
  )),
);

:host {
  display: block;
  display: flex;
  width: auto;
  justify-content: space-between;
  position: relative;
  align-items: flex-start;
}

// Make everything vertical
:host([vertical]) {
  flex-direction: column;
}

:host([hidden]) {
  display: none;
}

.pfe-progress-steps__progress-bar {
  display: flex;
  position: absolute;

  top: calc(
    var(--pfe-progress-steps-item__circle--size--active, #{pfe-fetch(size--active, $region: circle)}) -
    var(--pfe-progress-steps-item__circle--size, #{pfe-fetch(size, $region: circle)}) +
    #{pfe-local(thickness, $region: progress-bar)}
  ); // calc(32px - 20px + 2px)

  left: calc(#{pfe-local(size--first, $region: item)} / 2);

  height: pfe-local(thickness, $region: progress-bar); // 2px
  width: calc(100% - #{pfe-local(size--first, $region: item)} / 2 - #{pfe-local(size--last, $region: item)} / 2);
  background-color: pfe-local(color, $region: progress-bar);

  :host([vertical]) & {
    width: pfe-local(thickness, $region: progress-bar);

    // Position the progress bar correctly over the circle
    top: calc(
      var(
        --pfe-progress-steps-item__circle--size--active,
        #{pfe-fetch(size--active, $region: circle)}
      ) / 2);
    left: calc(
      (var(--pfe-progress-steps-item__circle--size, #{pfe-fetch(size, $region: circle)}) / 2) +
      #{pfe-local(thickness, $region: progress-bar)});

    height: calc(100% - var(
      --pfe-progress-steps-item__circle--size--active,
      #{pfe-fetch(size--active, $region: circle)}
    ) - 1em); // 1em represents the height of the description if provided
  }
  &--fill {
    display: block;
    height: pfe-local(thickness, $region: progress-bar);
    background-color: pfe-local(color--active, $region: progress-bar);
    width: 0;

    :host([vertical]) & {
      width: pfe-local(thickness, $region: progress-bar);
      height: 0;
    }
  }
}

// This negates the 1em margin for items for the vertical description on the height of the bar
::slotted(pfe-progress-steps-item[vertical]:not(.has-description):last-child) {
  margin-bottom: 1em;
}
