@use "@patternfly/pfe-sass" as *;
@use "sass:map";

@include configure(
  // QUESTION: should this be 'tab'?
  $name: 'tabs',
  $variables: (
    BackgroundColor:           transparent,
    BackgroundColor--inactive: pfe-var(surface--lighter),
    Color:                     pfe-var(text--muted),
    BorderColor--hover:        $pf-color-black-400,
    BorderColor: pfe-var(ui-accent),
    BorderWidth:               pfe-var(ui--border-width--active),
    tab: ( // to avoid collisions with panel
      FontSize:                pfe-var(font-size),
      Margin:                  0 0 calc( #{pfe-var(ui--border-width)} * -1),
      PaddingTop:              pfe-var(container-padding),
      PaddingBottom:           pfe-var(container-padding),
      PaddingRight:            calc(#{pfe-var(container-padding)} * 2),
      PaddingLeft:             calc(#{pfe-var(container-padding)} * 2),
      TextTransform:           none,
    ),
  ),
);

/// ===========================================================================
/// DEFAULT / WIND TAB VARIANT
/// ===========================================================================

:host {
  text-align: left;
  position: relative;
  display: block;
  cursor: pointer;
  margin: pfe-local(Margin, $region: tab);
  // Padding
  padding: pfe-local(PaddingTop, $region: tab) pfe-local(PaddingRight, $region: tab) pfe-local(PaddingBottom, $region: tab) pfe-local(PaddingLeft, $region: tab);
  // Borders
  border-style: pfe-var(ui--border-style);
  border-width: pfe-var(ui--border-width);
  border-color: transparent;
  border-bottom-width: pfe-local(BorderWidth);
  // Inner style
  background-color: pfe-local(BackgroundColor--inactive, $fallback: none); // TODO update to use opacity
  text-align: pfe-local(TextAlign, center, $region: tab);
  text-transform: pfe-local(TextTransform, $region: tab);
  color: pfe-local(Color);
  @include pfe-c-typography($type: text, $sizing: md, $base: true, $region: tab, $light-dom-heading: true);

  #tab {
    display: inline-flex;
    align-items: center;
    height: 100%;

    * {
      font-size: inherit;
      font-weight: inherit;
      color: inherit;
      margin: 0;
    }
  }

  @at-root #{&}([aria-selected="true"]) {
    background-color: pfe-local(BackgroundColor);
    border-bottom-color: pfe-local(BorderColor);

    #tab * {
      color: pfe-local(Color--focus);
    }
  }
}

:host(:hover),
:host(:active) {
  background-color: pfe-local(BackgroundColor);
  border-bottom-color: pfe-local(BorderColor--hover);

  #tab * {
    color: pfe-local(Color--focus);
  }
}

/// ===========================================================================
/// VERTICAL TAB ORIENTATION
/// ===========================================================================

@media screen and (min-width: pfe-breakpoint(md)) {
  :host([vertical]) {
    border-bottom-color: transparent;
    border-bottom-width: 0;
    border-left-color: pfe-var(surface--border);
    border-left-width: pfe-var(ui--border-width);
    padding: pfe-var(container-padding);
    --pfe-tabs--Margin: 0 calc(#{pfe-var(ui--border-width)} * -1) 0 0;
  }

  :host([vertical][aria-selected="true"]) {
    border-left-color: pfe-local(BorderColor);
    border-left-width: 3px;
  }

  :host([vertical]:not([variant="earth"])) {
    border-left: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    text-align: left !important;
  }

  :host([vertical]:not([variant="earth"])[aria-selected="true"]) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor);
    padding-left: calc(#{pfe-var(container-padding)} - 2px);
  }

  :host([vertical]:not([variant="earth"])[aria-selected="false"]) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
  }

  :host([vertical]:not([variant="earth"])[aria-selected="false"]:hover) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
    border-bottom: 0;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor--hover);
    padding-left: calc(#{pfe-var(container-padding)} - 2px);
  }
}

/// ===========================================================================
/// EARTH TAB VARIANTS
/// ===========================================================================
:host(:not([vertical])[variant="earth"]:not([aria-selected="true"]):first-of-type) {
  border-left-color: transparent;
}
:host(:not([vertical])[variant="earth"]:not([aria-selected="true"]):last-of-type) {
  border-right-color: transparent;
}


:host([variant="earth"][aria-selected="false"]) {
  background-color: pfe-local(BackgroundColor--inactive); //@todo update to use opacity
  border-color: pfe-var(surface--border);
  border-top-width: pfe-local(BorderWidth);
  border-top-color: transparent;
  border-bottom-color: pfe-local(BorderColor--hover);
  border-bottom-width: pfe-var(ui--border-width);

}

:host([variant="earth"][aria-selected="false"]:hover) {
  border-top-color: pfe-local(BorderColor--hover);
}

// nth of type is needed to override first and last of type selectors above
:host([variant="earth"][aria-selected="true"]) {
  background-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--lightest));
  border-bottom: 0;
  border-left-color: pfe-var(surface--border);
  border-right-color: pfe-var(surface--border);
  border-top: solid pfe-local(BorderColor) pfe-local(BorderWidth);
}

:host([variant="earth"][aria-selected="true"]:last-of-type) {
  border-right: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
}

/// ===========================================================================
/// EARTH TAB VERTICAL ORIENTATION
/// ===========================================================================

@media screen and (min-width: pfe-breakpoint(md)) {
  :host([vertical][variant="earth"]) {
    border-top: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    border-bottom: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    border-left-width: pfe-var(ui--border-width--active);
    text-align: left;
  }

  :host([vertical][variant="earth"][aria-selected="false"]:first-of-type) {
    border-top-color: transparent;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
  }

  :host([vertical][variant="earth"][aria-selected="false"]:last-of-type) {
    border-bottom-color: transparent;
  }

  :host([vertical][variant="earth"][aria-selected="false"]) {
    border-right: 0;
    border-bottom-color: transparent;
    border-left-color: transparent;
  }

  :host([vertical][variant="earth"][aria-selected="false"]:hover) {
    border-left-color: pfe-local(BorderColor--hover);
    border-top-color: pfe-var(surface--border);
  }

  :host([vertical][variant="earth"][aria-selected="false"]:first-of-type:hover) {
    border-left-color: pfe-var(surface--border);
    border-top-color: transparent;
  }

  :host([vertical][variant="earth"][aria-selected="true"]) {
    border-top-color: pfe-var(surface--border);
    border-left-color: pfe-local(BorderColor);
    border-right-color: transparent;
    margin-right: #{pfe-fetch(ui--border-width) * -1};
  }
}

/// ===========================================================================
/// EARTH TAB VARIANTS ON DARK & SATURATED
/// ===========================================================================
/// In dark & saturated contexts, we override the local color vars

:host([on="dark"][variant="earth"]) {
  --pfe-tabs--Color: #{pfe-var(text--on-dark)};
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
  border-right-color: pfe-var(surface--border--darker);
  border-left-color: pfe-var(surface--border--darker);
}

:host([on="dark"][variant="earth"][aria-selected="false"]) {
  --pfe-tabs--Color: #{pfe-var(text--muted--on-dark)};
  --pfe-tabs--BackgroundColor--inactive: #{pfe-var(surface--darker)};
}

:host([on="dark"][variant="earth"][aria-selected="true"]) {
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
  --pfe-tabs--BackgroundColor: #{pfe-var(surface--darkest)};
}

// SATURATED
:host([variant="earth"][on="saturated"][aria-selected="false"]) {
  --pfe-tabs--BackgroundColor: #{pfe-var(surface--lighter)};
}

:host([variant="earth"][on="saturated"][aria-selected="true"]) {
  --pfe-tabs--BackgroundColor: #{pfe-var(surface--lightest)};
}


/// ===========================================================================
/// WIND TAB VARIANTS ON DARK & SATURATED
/// ===========================================================================

// SATURATED
:host([on="saturated"]:not([variant="earth"])) {
  --pfe-tabs--Color: #{pfe-var(text--on-saturated)};
  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};
}

:host([on="saturated"]:not([variant="earth"])[aria-selected="true"]) {
  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};
  --pfe-tabs--BorderColor: #{pfe-var(ui-base--on-saturated)};
}

:host([on="saturated"]:not([variant="earth"])[aria-selected="false"]) {
  --pfe-tabs--Color: #{pfe-var(text--muted--on-saturated)};
}

:host([on="saturated"]:not([variant="earth"])[aria-selected="false"]:hover) {
  --pfe-tabs--BorderColor: #{pfe-var(surface--border)};
}

:host([on="dark"]:not([variant="earth"])) {
  --pfe-tabs--Color: #{pfe-var(text--on-dark)};
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
}

:host([on="dark"]:not([variant="earth"])[aria-selected="false"]) {
  --pfe-tabs--Color: #{pfe-var(text--muted--on-saturated)};
}

:host([on="dark"]:not([variant="earth"])[aria-selected="false"]:hover) {
  --pfe-tabs--BorderColor: #{pfe-var(surface--lightest)};
  border-bottom-color: pfe-var(surface--base);
  --pfe-tabs__tab--BorderBottom: #{pfe-local(BorderWidth)} #{pfe-var(ui--border-style)} #{pfe-var(surface--border)};
}

:host([on="dark"]:not([variant="earth"])[vertical][aria-selected="false"]:hover) {
  border-bottom-color: transparent;
}
