@use "@patternfly/patternfly/sass-utilities/all" as *;
@use "@patternfly/pfe-sass" as *;

@include configure(
  $name: 'toast',
  $variables: (
    Top: 50px,
    MaxWidth: 500px,
    MinWidth: 250px,
    Right--offset: 50px, // needed with box-shadow

    container: (
      BackgroundColor: pfe-var(surface--lightest),
      BoxShadow: pfe-var(box-shadow--lg),
      Color: pfe-var(text),
      Padding: pfe-var(container-padding)
    ),

    close: (
      svg--Fill: pfe-var(feedback--default--darkest),
      svg--Fill--hover: #333, // @TODO: Find pf core parity
      svg--Height: 12px, //@TODO: pfe-var(icon-size)?
      svg--Width: 12px, //@TODO: pfe-var(icon-size)?

      PaddingTop: 0,
      PaddingRight: 0,
      PaddingBottom: 0,
      PaddingLeft: 0
    ),
  ),
);

// Nested internal variables (pfe-local calls), maps cannot "self-reference"
@include merge-local-variables((
  Right: calc(-1 * (#{pfe-local(MaxWidth)} + #{pfe-local(Right--offset)})),
  close: (
    Padding: pfe-local(PaddingTop, $region: close) pfe-local(PaddingRight, $region: close) pfe-local(PaddingBottom, $region: close) pfe-local(PaddingLeft, $region: close)
  ),
));

:host {
  // flex parent props
  align-items: stretch;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;

  // animation
  position: absolute;
  right:  pfe-local(Right);
  top:    pfe-local(Top);
  transition: right pfe-var(animation-speed) pfe-var(animation-timing);
  will-change: right;

  max-width: pfe-local(MaxWidth);
  min-width: pfe-local(MinWidth);

  @media only screen and (max-width: pfe-breakpoint($size: sm, $max: true)) {
    max-width: calc(#{pfe-local(MaxWidth)} / 2);
    min-width: calc(#{pfe-local(MinWidth)} / 2);
  }
}

:host([hidden]) {
  display: none;
}

:host(.open) {
  --pfe-toast--Right: 50px;
}

:host(:not(.open)){
  --pfe-toast--Right: calc(-1 * #{pfe-local(MaxWidth)} + #{pfe-local(Right--offset)});
}

::slotted(:first-child) {
  margin-top: 0;
}

::slotted(button) {
  background: none;
  border-radius: 0;
  display: inline-block;
  margin-bottom: 0;
  margin-right: 1rem;
  // NOTE: sass requires us to parenthesize here
  padding: (.5rem .75rem);
  text-align: center;
}

.pfe-toast {
  &__container {
    // flex child props
    align-self: flex-start;
    flex: 1 1 auto;

    // flex parent props
    align-items: flex-start;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;

    background-color: pfe-local(BackgroundColor, $region: container);
    box-shadow:       pfe-local(BoxShadow, $region: container);
    color:            pfe-local(Color, $region: container);
    padding:          pfe-local(Padding, $region: container);
  }
  &__content {
    // flex child props
    flex: 1 1 auto;
  }
  &__close {
    // flex child props
    flex: 0 0 auto;

    background-color: transparent;
    border: none;
    cursor: pointer;
    margin: 0;
    padding: pfe-local(Padding, $region: close);

    & > svg {
      fill:   pfe-local(svg--Fill, $region: close);
      height: pfe-local(svg--Height, $region: close);
      width:  pfe-local(svg--Width, $region: close);
    }

    &:hover {
      & > svg {
        fill: pfe-local(svg--Fill--hover, $region: close);
      }
    }
  }
}
