{
  "name": "@patternfly/patternfly-elements",
  "private": true,
  "type": "module",
  "description": "Monorepo for the PatternFly Elements project.",
  "repository": {
    "type": "git",
    "url": "github:patternfly/patternfly-elements"
  },
  "engines": {
    "node": ">=16 <=19"
  },
  "scripts": {
    "🐒-DEV": "❓ Development aids",
    "start": "wireit",
    "dev": "wireit",
    "🚧-BUILD": "❓ Make packages and artifacts",
    "build": "wireit",
    "build:create": "wireit",
    "analyze": "wireit",
    "docs": "wireit",
    "site": "npm run build",
    "new": "npm run build:create && ./tools/create-element/bin/main.js",
    "🧪-TEST": "❓ Test packages",
    "test": "wireit",
    "test:ci": "wireit",
    "test:watch": "wtr --watch",
    "test:vue": "wtr --watch --group with-vue",
    "test:react": "wtr --watch --group with-react",
    "e2e": "wireit",
    "e2e:update": "wireit",
    "🚚-DIST": "❓ Publish packages",
    "license-update": "node scripts/license-update.js",
    "leftover-check": "bash scripts/leftover-check.sh",
    "⚙️--UTIL": "❓ Manages the repo",
    "postinstall": "wireit",
    "clean": "git clean -fX",
    "lint": "eslint .",
    "patch": "patch-package",
    "husky": "npx husky install"
  },
  "wireit": {
    "postinstall": {
      "dependencies": [
        "patch",
        "husky"
      ]
    },
    "build": {
      "dependencies": [
        "build:tools",
        "analyze",
        "docs",
        "build:core",
        "build:icons",
        "build:lightdom",
        "build:elements",
        "build:create",
        "build:bundle",
        "build:react"
      ]
    },
    "analyze": {
      "command": "npm run -ws --if-present analyze",
      "files": [
        "elements/*/demo/*.html",
        "elements/**/*.ts",
        "elements/**/*.css",
        "core/**/*.ts",
        "tools/**/*.ts"
      ],
      "output": [
        "elements/custom-elements.json",
        "core/pfe-core/custom-elements.json"
      ],
      "dependencies": [
        "build:core",
        "build:tools"
      ]
    },
    "build:create": {
      "command": "tsc -b tools/create-element",
      "files": [
        "tools/create-element/*.ts",
        "tools/create-element/generator/**/*.ts"
      ],
      "output": [
        "tools/create-element/*.tsbuildinfo"
      ],
      "dependencies": [
        "build:core",
        "build:tools"
      ]
    },
    "build:elements": {
      "command": "tspc --build elements --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:core",
        "build:tools"
      ],
      "files": [
        "elements/*/*.ts",
        "!elements/*/*.d.ts",
        "elements/*/*.css",
        "elements/tsconfig.json",
        "tsconfig.settings.json"
      ],
      "output": [
        "elements/*/*.js",
        "elements/*/*.js.map",
        "elements/*/*.d.ts",
        "elements/*.tsbuildinfo"
      ]
    },
    "build:tools": {
      "command": "tsc --build tools/pfe-tools --pretty",
      "clean": "if-file-deleted",
      "files": [
        "tools/pfe-tools/*.ts",
        "tools/pfe-tools/**/*.ts",
        "!tools/pfe-tools/*.d.ts",
        "!tools/pfe-tools/**/*.d.ts"
      ],
      "output": [
        "tools/pfe-tools/**/*.js",
        "tools/pfe-tools/**/*.map",
        "tools/pfe-tools/**/*.d.ts",
        "tools/*.tsbuildinfo"
      ]
    },
    "build:core": {
      "command": "tspc --build ./core/pfe-core --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:tools"
      ],
      "files": [
        "core/**/*.ts",
        "!core/**/*.d.ts",
        "core/tsconfig.json"
      ],
      "output": [
        "core/**/*.js",
        "core/**/*.map",
        "core/**/*.d.ts",
        "*.tsbuildinfo"
      ]
    },
    "build:icons": {
      "command": "ts-node --esm ./scripts/icons.ts",
      "output": [
        "elements/pf-icon/icons/*/*.js"
      ]
    },
    "build:bundle": {
      "command": "scripts/bundle.js",
      "dependencies": [
        "build:core",
        "build:tools"
      ],
      "files": [
        "elements/**/*.ts",
        "elements/**/*.css",
        "core/**/*.ts",
        "scripts/bundle.js"
      ],
      "output": [
        "elements/pfe.min.js"
      ]
    },
    "build:react": {
      "command": "ts-node --esm scripts/generate-react-wrappers.ts",
      "dependencies": [
        "build:core",
        "build:tools",
        "analyze"
      ],
      "files": [
        "elements/custom-elements.json",
        "scripts/generate-react-wrappers.ts",
        "tools/pfe-tools/react/generate-wrappers.ts"
      ],
      "output": [
        "react/**/*"
      ]
    },
    "build:lightdom": {
      "command": "npm run build:lightdom --workspaces --if-present",
      "dependencies": [
        "build:tools"
      ]
    },
    "docs": {
      "command": "eleventy --incremental",
      "files": [
        "elements/*/docs/*",
        "docs/**/*"
      ],
      "output": [
        "_site"
      ],
      "dependencies": [
        "build:core",
        "build:tools",
        "build:icons",
        "analyze"
      ]
    },
    "dev": {
      "command": "web-dev-server --open --watch",
      "service": true,
      "dependencies": [
        "build:tools"
      ]
    },
    "watch:analyze": {
      "service": true,
      "command": "npm run -ws --if-present analyze -- --watch",
      "files": [
        "elements/**/*.ts",
        "core/**/*.ts",
        "tools/**/*.ts"
      ],
      "dependencies": [
        "build:tools"
      ]
    },
    "start": {
      "service": true,
      "command": "eleventy --serve",
      "dependencies": [
        "build:core",
        "build:tools",
        "build:icons",
        "analyze",
        "watch:analyze",
        "dev"
      ]
    },
    "test": {
      "command": "wtr --group default",
      "files": [
        "**/*.ts",
        "**/*.css"
      ],
      "output": [],
      "dependencies": [
        "build:tools",
        "build:core",
        "build:icons"
      ]
    },
    "new": {
      "command": "./tools/create-element/bin/main.js",
      "dependencies": [
        "build:create"
      ]
    },
    "test:ci": {
      "command": "wtr",
      "files": [
        "**/*.ts",
        "**/*.css"
      ],
      "output": [],
      "dependencies": [
        "build:tools",
        "build:core",
        "build:icons"
      ]
    },
    "e2e": {
      "command": "PW_EXPERIMENTAL_TS_ESM=1 playwright test",
      "dependencies": [
        "build:tools",
        "build:core",
        "analyze",
        "docs",
        "build:elements"
      ]
    },
    "e2e:update": {
      "command": "PW_EXPERIMENTAL_TS_ESM=1 playwright test --update-snapshots",
      "dependencies": [
        "build:tools",
        "build:core",
        "analyze",
        "docs",
        "build:elements"
      ]
    }
  },
  "lint-staged": {
    "*.{js,ts}": "eslint --fix"
  },
  "devDependencies": {
    "@actions/core": "^1.10.0",
    "@actions/exec": "^1.1.1",
    "@actions/glob": "^0.4.0",
    "@commitlint/cli": "^17.6.1",
    "@commitlint/config-conventional": "^17.6.1",
    "@fortawesome/free-brands-svg-icons": "^6.4.0",
    "@fortawesome/free-regular-svg-icons": "^6.4.0",
    "@fortawesome/free-solid-svg-icons": "^6.4.0",
    "@jspm/generator": "^1.1.6",
    "@octokit/core": "^4.2.0",
    "@patternfly/patternfly": "^4.224.2",
    "@rhds/elements": "^1.0.0",
    "@types/koa__router": "^12.0.1",
    "@types/numeral": "^2.0.3",
    "@types/prismjs": "^1.26.1",
    "@types/prompts": "^2.4.5",
    "commitlint": "^17.6.1",
    "execa": "^7.1.1",
    "fuse.js": "^6.6.2",
    "husky": "^8.0.3",
    "leasot": "^13.3.0",
    "nunjucks": "^3.2.3",
    "prompts": "^2.4.2",
    "wireit": "^0.9.5"
  },
  "workspaces": [
    "./core/*",
    "./elements",
    "./tools/*"
  ],
  "dependencies": {
    "@lit-labs/react": "^1.2.0"
  }
}
