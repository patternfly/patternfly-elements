{
  "name": "@patternfly/patternfly-elements",
  "private": true,
  "type": "module",
  "description": "Monorepo for the PatternFly Elements project.",
  "repository": {
    "type": "git",
    "url": "github:patternfly/patternfly-elements"
  },
  "engines": {
    "node": ">=16 <=19"
  },
  "scripts": {
    "👷‍♀️-----DEV--------👷‍♀️": "❓ Development aids",
    "start": "wireit",
    "dev": "wireit",
    "dev:server": "wireit",
    "dev:tools": "wireit",
    "watch:docs": "wireit",
    "watch:docs:analyze": "wireit",
    "watch:docs:core": "wireit",
    "watch:docs:eleventy": "wireit",
    "new": "./tools/create-element/bin/main.js",
    "👷‍♀️-----BUILD------👷‍♀️": "❓ Prepare dist artifacts",
    "build": "wireit",
    "build:tools": "wireit",
    "build:elements": "wireit",
    "build:icons": "wireit",
    "build:core": "wireit",
    "build:lightdom": "wireit",
    "build:bundle": "wireit",
    "build:analyze": "wireit",
    "build:docs": "wireit",
    "🧑‍🔬-----TEST-------🧑‍🔬": "❓ Test packages",
    "test": "wtr --group default",
    "🧑‍🔬--TEST---ALL FRAMEWORKS--🧑‍🔬": "❓ Test packages - all frameworks",
    "test:ci": "wtr",
    "test:watch": "wtr --watch",
    "test:vue": "wtr --watch --group with-vue",
    "test:react": "wtr --watch --group with-react",
    "🎨--TEST---VISUAL REGRESSION--🎨": "❓ Test packages for visual rergressions, locally",
    "test:e2e": "run-s test:e2e:build test:e2e:test",
    "test:e2e:build": "run-s build:tools build:analyze build:core build:docs build:elements",
    "test:e2e:update": "PW_EXPERIMENTAL_TS_ESM=1 playwright test --update-snapshots",
    "test:e2e:test": "PW_EXPERIMENTAL_TS_ESM=1 playwright test",
    "🚚-----DIST-------🚚": "❓ Publish packages",
    "license-update": "node scripts/license-update.js",
    "leftover-check": "bash scripts/leftover-check.sh",
    "site": "run-s build:tools build:icons build:analyze build:core build:elements build:docs",
    "⚙️-----UTIL-------⚙️": "❓ Manages the repo",
    "clean": "git clean -fX -e node_modules -e tsconfig.tsbuildinfo",
    "clean:deep": "git clean -fX -e node_modules",
    "clean:nuke": "git clean -fX",
    "lint": "eslint .",
    "postinstall": "run-s postinstall:**",
    "postinstall:patch": "patch-package",
    "postinstall:husky": "npx husky install",
    "postinstall:build:create": "npm run build --workspace @patternfly/create-element",
    "postinstall:build:tools": "npm run build",
    "pr": "node scripts/open-pr.js"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "build:tools",
        "build:analyze",
        "build:docs",
        "build:core",
        "build:icons",
        "build:lightdom",
        "build:elements",
        "build:bundle"
      ]
    },
    "build:elements": {
      "command": "ttsc --build elements --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:core",
        "build:tools"
      ],
      "files": [
        "elements/**/*.ts",
        "elements/**/*.css",
        "elements/tsconfig.json",
        "core/**/*.ts",
        "core/tsconfig.json",
        "tsconfig.settings.json"
      ],
      "output": [
        "elements/*/*.js",
        "elements/*/*.js.map",
        "elements/*/*.d.ts",
        "elements/*.tsbuildinfo"
      ]
    },
    "build:tools": {
      "command": "tsc --build ./tools/pfe-tools --pretty",
      "clean": "if-file-deleted",
      "files": [
        "tools/pfe-tools/**/*.ts"
      ],
      "output": [
        "tools/pfe-tools/**/*.js",
        "tools/pfe-tools/**/*.d.ts",
        "tools/pfe-tools/**/*.map",
        "*.tsbuildinfo"
      ]
    },
    "build:core": {
      "command": "ttsc --build ./core/pfe-core --pretty",
      "clean": "if-file-deleted",
      "dependencies": [
        "build:tools"
      ],
      "files": [
        "core/pfe-core/**/*.ts"
      ],
      "output": [
        "core/pfe-core/**/*.js",
        "core/pfe-core/**/*.map",
        "core/pfe-core/**/*.d.ts",
        "*.tsbuildinfo"
      ]
    },
    "build:icons": {
      "command": "ts-node --esm --project tsconfig.icons.json ./scripts/icons/build.ts",
      "dependencies": [
        "build:core",
        "build:tools"
      ],
      "output": [
        "elements/pfe-icon/icons/*/*.js"
      ]
    },
    "build:analyze": {
      "command": "npm run -ws --if-present analyze",
      "files": [
        "elements/**/*.ts",
        "elements/**/*.css",
        "core/**/*.ts",
        "tools/**/*.ts"
      ],
      "output": [
        "elements/custom-elements.json",
        "core/pfe-core/custom-elements.json"
      ],
      "dependencies": [
        "build:core",
        "build:tools"
      ]
    },
    "build:bundle": {
      "command": "scripts/bundle.js",
      "dependencies": [
        "build:core",
        "build:tools"
      ],
      "files": [
        "**/*.ts",
        "scripts/bundle.js"
      ],
      "output": [
        "elements/pfe.min.js"
      ]
    },
    "build:lightdom": {
      "command": "npm run build:lightdom --workspaces --if-present",
      "dependencies": [
        "build:tools"
      ]
    },
    "build:docs": {
      "command": "eleventy --config=eleventy.config.cjs",
      "files": [
        "elements/*/docs/*",
        "docs/**/*"
      ],
      "output": [
        "_site"
      ],
      "dependencies": [
        "build:core",
        "build:tools",
        "build:analyze"
      ]
    },
    "dev": {
      "command": "web-dev-server --open --watch",
      "dependencies": [
        "build:tools"
      ]
    },
    "watch:docs": {
      "command": "npm-run-all --parallel watch:docs:*",
      "dependencies": [
        "build:tools",
        "watch:docs:analyze",
        "build:core",
        "watch:docs:eleventy"
      ]
    },
    "watch:docs:analyze": {
      "service": true,
      "command": "npm run -ws --if-present analyze -- --watch",
      "files": [
        "elements/**/*.ts",
        "core/**/*.ts",
        "tools/**/*.ts"
      ],
      "dependencies": [
        "build:tools"
      ]
    },
    "watch:docs:core": {
      "command": "npm run build:core -- --watch",
      "service": true
    },
    "watch:docs:eleventy": {
      "command": "eleventy --serve --config=eleventy.config.cjs",
      "service": true
    },
    "start": {
      "dependencies": [
        "build:tools",
        "build:icons",
        "build:analyze",
        "dev",
        "watch:docs:analyze"
      ]
    }
  },
  "devDependencies": {
    "@actions/core": "^1.10.0",
    "@actions/exec": "^1.1.1",
    "@actions/glob": "^0.3.0",
    "@commitlint/cli": "^17.4.2",
    "@commitlint/config-conventional": "^17.4.2",
    "@fortawesome/free-brands-svg-icons": "^6.2.0",
    "@fortawesome/free-regular-svg-icons": "^6.2.0",
    "@fortawesome/free-solid-svg-icons": "^6.2.0",
    "@jspm/generator": "^1.0.0-beta.33",
    "@patternfly/patternfly": "^4.210.2",
    "@patternfly/pfe-tools": "^1.0.0-next.41",
    "@types/koa__router": "^12.0.0",
    "@types/numeral": "^2.0.2",
    "@types/prismjs": "^1.26.0",
    "@types/prompts": "^2.4.1",
    "commitlint": "^17.4.2",
    "cpx": "^1.5.0",
    "fuse.js": "^6.6.2",
    "git-branch": "^2.0.1",
    "husky": "^8.0.3",
    "leasot": "^13.3.0",
    "npm-merge-driver": "^2.3.6",
    "nunjucks": "^3.2.3",
    "open": "^8.4.0",
    "prompts": "^2.4.2",
    "renamer": "^4.0.0",
    "wireit": "^0.9.3",
    "zero-md": "^2.3.6"
  },
  "lint-staged": {
    "*.{js,ts}": "eslint --fix"
  },
  "workspaces": [
    "./core/*",
    "./elements",
    "./tools/*"
  ],
  "dependencies": {
    "@octokit/core": "^4.1.0"
  }
}
